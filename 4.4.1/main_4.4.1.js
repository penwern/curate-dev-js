(()=>{var e,t={3125:()=>{async function e(){const e=`${window.location.origin}/api/preservation`,t=await PydioApi._PydioRestClient.getOrUpdateJwt();return fetch(e,{headers:{Authorization:`Bearer ${t}`},method:"GET"}).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((e=>{sessionStorage.setItem("preservationConfigs",JSON.stringify(e))})).catch((e=>{console.error("Fetch error:",e)}))}function t(t,n,o){const r=document.createElement("div");r.id="preservationConfigsSubMenu",r.style.maxHeight="8em",r.style.overflowY="scroll",r.innerHTML=n,o.forEach((e=>{let t=document.createElement("div");const n=JSON.parse(localStorage.getItem(e.id));if(t.style.transition="0.3s ease all",t.addEventListener("mouseenter",(e=>{e.target.style.background="var(--md-sys-color-outline-variant-50)"})),t.addEventListener("mouseleave",(e=>{e.target.style.background="none"})),t.addEventListener("click",(t=>{t.target.classList.contains("mdi-star-outline")?(console.info("bookmarked!"),localStorage.setItem(e.id,JSON.stringify({name:e.name,bookmarked:!0})),t.target.classList.remove("mdi-star-outline"),t.target.classList.add("mdi-star"),r.remove()):t.target.classList.contains("mdi-star")?(console.info("un-bookmarked!"),localStorage.setItem(e.id,JSON.stringify({name:e.name,bookmarked:!1})),t.target.classList.remove("mdi-star"),t.target.classList.add("mdi-star-outline"),r.remove()):(!async function(e){const t=await PydioApi._PydioRestClient.getOrUpdateJwt(),n=`${window.location.origin}/a/scheduler/hooks/a3m-transfer`,o=pydio._dataModel._selectedNodes.map((e=>({path:Curate.workspaces.getOpenWorkspace()+e._path,slug:e._metadata.get("usermeta-atom-linked-description")||""}))),i=JSON.stringify({Paths:o,JobParameters:{ConfigId:e.toString()}});fetch(n,{method:"POST",mode:"cors",headers:{accept:"application/json","accept-language":"en-GB,en-US;q=0.9,en;q=0.8",authorization:`Bearer ${t}`,"cache-control":"no-cache","content-type":"application/json",pragma:"no-cache","sec-fetch-mode":"cors","sec-fetch-site":"same-origin","x-pydio-language":"en-us"},body:i}).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((e=>{console.info("Preservation config initiated successfully")})).catch((e=>{console.error("Fetch error:",e)}))}(e.id),r.remove())})),t.innerHTML='<span role="menuitem" tabindex="0" style="border: 10px; box-sizing: border-box; display: block; font-family: Roboto, sans-serif; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; text-decoration: none; margin: 0px; padding: 0px; outline: none; font-size: 15px; font-weight: inherit; position: relative; color: var(--md-sys-color-inverse-surface); line-height: 32px; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; min-height: 32px; white-space: nowrap; background: none;width:inherit;"><div style="width:inherit;"><div style="width:inherit;margin-left: 24px; position: relative; display:flex;align-content: center;flex-wrap: nowrap;flex-direction: row;align-items: center;justify-content: flex-start;"><div role="menuLabel" style="max-width:8em;overflow-x:clip;text-overflow:ellipsis;">Source Editor</div><span class="mdi mdi-star-outline menu-icons" color="#757575" style="color: rgb(117, 117, 117);font-size: 16px; display: block; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; height: 24px; width: 24px;padding: 5px; padding-left:10px; position:absolute; right:24px"></span></div></div></span>',t.querySelector('[role="menuLabel"]').innerText=e.name,r.querySelector('[role="menu"]').appendChild(t),n&&n.bookmarked){let e=t.querySelector(".mdi-star-outline");e.classList.remove("mdi-star-outline"),e.classList.add("mdi-star")}}));const l=document.createElement("div");l.innerHTML='<span role="menuitem" tabindex="0" style="border: 10px; box-sizing: border-box; display: block; font-family: Roboto, sans-serif; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; text-decoration: none; margin: 0px; padding: 0px; outline: none; font-size: 15px; font-weight: inherit; position: relative; color: var(--md-sys-color-inverse-surface); line-height: 32px; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; min-height: 32px; white-space: nowrap; background: none;width:inherit;"><div style="width:inherit;"><div style="width:inherit;margin-left: 24px; position: relative; display:flex;align-content: center;flex-wrap: nowrap;flex-direction: row;align-items: center;justify-content: flex-start;"><div role="menuLabel" style="max-width:8em;overflow-x:clip;text-overflow:ellipsis;">Source Editor</div></div></div></span>',l.querySelector('[role="menuLabel"]').innerText="Create New",l.style.transition="0.3s ease all",l.addEventListener("mouseenter",(e=>{e.target.style.background="var(--md-sys-color-outline-variant-50)"})),l.addEventListener("mouseleave",(e=>{e.target.style.background="none"})),l.addEventListener("click",(t=>{document.querySelector("#preservationConfigsSubMenu").remove(),function(t,n){const o=document.createElement("div");o.classList.add("config-modal-container");const s=document.createElement("div");s.classList.add("config-modal-scroll-container");const r=document.createElement("div");r.classList.add("config-modal-content");const l=document.createElement("div");l.textContent=t,l.classList.add("config-popup-title"),r.appendChild(l);const d=document.createElement("div");d.classList.add("config-main-options-container"),r.appendChild(d),n.forEach((e=>{const t=document.createElement("div");t.classList.add("config-input-category"),t.id=e.category.replaceAll(" ","_");const n=document.createElement("div");n.classList.add("config-text-label"),n.textContent=e.category,t.appendChild(n),e.inputs.forEach((e=>{a(e,t)})),s.appendChild(t)}));const c=document.createElement("button");c.classList.add("config-clear-form"),c.textContent="Clear Form",c.addEventListener("click",(e=>{s.querySelectorAll("input").forEach((e=>{"text"==e.type?e.value="":"checkbox"==e.type?e.checked=!1:e.value=0,e.dispatchEvent(new CustomEvent("change",{bubbles:!0})),e.dispatchEvent(new CustomEvent("input",{bubbles:!0}))}))})),s.appendChild(c);const u=document.createElement("div");u.classList.add("config-options-container"),u.style="display: flex;align-items: center;flex-wrap: nowrap;flex-direction: column;";const p=document.createElement("div");p.classList.add("config-text-label"),p.textContent="Create or Edit Configs",p.style="padding-bottom: 1em !important",u.appendChild(p),u.appendChild(s);const m=document.createElement("div");m.classList.add("config-modal-scroll-container");const h=document.createElement("button");h.classList.add("config-save-button"),h.textContent="Save Config",h.addEventListener("click",(t=>{const o=JSON.parse(sessionStorage.getItem("preservationConfigs")),a=u.querySelector("#name").value,s=n.flatMap((e=>e.inputs.map((e=>e.name)).concat(e.inputs.flatMap((e=>e.suboptions?e.suboptions.map((e=>e.name)):[]))))),r={},l=o?.find((e=>e.name==a));l?r.id=l.id:r.user=pydio.user.id,s.forEach((e=>{const t=document.querySelector("#"+e);t&&"submit"!=t.type&&(t.disabled&&(r[e.toLowerCase()]=!1),"checkbox"==t.type?r[e.toLowerCase()]=+t.checked:t.querySelector("input[type='range']")?r[e.toLowerCase()]=t.querySelector("input[type='range']").value:"name"==e?r.name=t.value:"image_normalization_tiff"==e?r[e.toLowerCase()]="TIFF"===t.value?1:0:"string"==typeof t.value?r[e.toLowerCase()]=t.value.toLowerCase():r[e.toLowerCase()]=t.value)})),l?async function(e){const t=`${window.location.origin}/api/preservation/${e.id}`,n=await PydioApi._PydioRestClient.getOrUpdateJwt();fetch(t,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(e)}).then((e=>{if(!e.ok)throw new Error(`HTTP error while updating config, Status: ${e.status}`);if(200==e.status)return console.info("config saved successfully"),e.json()})).catch((e=>{console.error("Fetch error:",e),Curate.ui.modals.curatePopup({title:"Error",type:"error",content:"There was an error saving your modified configuration. Please try again, or contact support if the problem persists."}).fire()}))}(r):async function(e){const t=`${window.location.origin}/preservation`,n=await PydioApi._PydioRestClient.getOrUpdateJwt();return fetch(t,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(e)}).then((e=>{if(e.ok)return console.info("config saved successfully"),e.json();throw new Error(`HTTP error! Status: ${e.status}`)})).catch((e=>{console.error("Fetch error:",e),Curate.ui.modals.curatePopup({title:"Error",type:"error",content:"There was an error saving your configuration. Please try again, or contact support if the problem persists."}).fire()}))}(r).then((t=>{if(t){const t=JSON.parse(sessionStorage.getItem("preservationConfigs"));e().then((e=>{const n=JSON.parse(sessionStorage.getItem("preservationConfigs"));if(r.id)document.querySelector("#config-"+r.id).remove(),i(m,[n.find((e=>e.id===r.id))]);else{const e=n.find((e=>!t.some((t=>t.id===e.id))));i(m,[e])}}))}}))})),u.appendChild(h),d.appendChild(u),u.addEventListener("input",(e=>{let t=u.querySelector("#name").value;0==t.length?h.style.display="none":t.trim().length<3?(h.textContent="Add a name 3 characters or longer",h.style.display="block"):(h.textContent="Save Config",h.style.display="block")}));const g=document.createElement("div");g.classList.add("config-options-container"),g.id="savedConfigsContainer",g.style="display:flex;align-items:center;justify-content:flex-start;flex-direction:column;";const f=document.createElement("div");f.classList.add("config-text-label"),f.style="padding-bottom: 1em; !important",f.textContent="Saved Configs",g.appendChild(f);const y=JSON.parse(sessionStorage.getItem("preservationConfigs"));i(m,g,y),g.appendChild(m),d.appendChild(g),o.appendChild(r);const v=document.createElement("div");v.classList.add("action-buttons");const b=document.createElement("button");b.classList.add("config-modal-close-button"),b.textContent="Close",b.addEventListener("click",(()=>{document.body.removeChild(o)})),v.appendChild(b),r.appendChild(v),document.body.appendChild(o),o.style.display="flex"}("Preservation Configs",s)})),r.querySelector('[role="menu"]').appendChild(l),document.body.appendChild(r);const d=r.firstChild.getBoundingClientRect(),c=t.getBoundingClientRect(),u=c.left,p=window.innerWidth-c.right;var m;return u<p?(m=c.top,newRight=window.innerWidth-c.right,r.style.position="absolute",r.style.top=`${m}px`,r.style.right=`${newRight}px`):u>p?(m=c.top,newRight=window.innerWidth-c.left+d.width,r.style.position="absolute",r.style.top=`${m}px`,r.style.right=`${newRight}px`):(m=c.top,newRight=window.innerWidth-c.right,r.style.position="absolute",r.style.top=`${m}px`,r.style.right=`${newRight}px`),r}function n(e,t,n="16px",o="5px"){const i=document.createElement("div");return i.style.transition="0.3s ease all",i.style.maxWidth="20em",i.addEventListener("mouseenter",(e=>{e.target.style.background="var(--md-sys-color-outline-variant-50)"})),i.addEventListener("mouseleave",(e=>{e.target.style.background="none"})),i.id="preservationConfigDropdown",i.innerHTML='<span role="menuitem" tabindex="0" style="border: 10px; box-sizing: border-box; display: block; font-family: Roboto, sans-serif; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; text-decoration: none; margin: 0px; padding: 0px; outline: none; font-size: 15px; font-weight: inherit; position: relative; color:  color: var(--md-sys-color-inverse-surface); line-height: 32px; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; min-height: 32px; white-space: nowrap; background: none;"><div><div style="margin-left: 0px; padding: 0px 64px 0px 24px; position: relative;"><span class="mdi '+t+' menu-icons" color="#757575" style="color: rgb(117, 117, 117); position: absolute; font-size:'+n+";display: block; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; height: 24px; width: 24px; top: 4px; margin: 0px; right: 24px; fill: rgb(117, 117, 117); padding: "+o+';"></span><div role="menuLabel" style="overflow-x:clip;text-overflow:ellipsis;">'+e+"</div></div></div></span>",i}function o(e){const o=JSON.parse(sessionStorage.getItem("preservationConfigs"));setTimeout((()=>{for(const i of e.querySelectorAll("div")){if("Preserve"==i.innerText){const a=n("Preservation Configs","mdi-menu-right","24px","0px");e.insertBefore(a,i.nextSibling);const s=document.querySelector("#preservationConfigDropdown"),r=[1,3];return document.addEventListener("mousedown",(e=>{}),{once:!0}),s.addEventListener("click",(e=>{const n=t(s,'<div style="color: var(--md-sys-color-inverse-surface); background-color: transparent; transition: transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; box-sizing: border-box; font-family: Roboto, sans-serif; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px; border-radius: 20px; position: fixed; z-index: 2100; opacity: 1; transform: scale(1, 1); transform-origin: left top; max-height: 963px; overflow-y: auto;"><div style="max-height: 100%; overflow-y: auto; transform: scaleX(1); opacity: 1; transform-origin: left top; transition: transform 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 250ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;"><div style="opacity: 1; transform: scaleY(1); transform-origin: left top; transition: transform 500ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 500ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;"><div role="presentation" style="z-index: 1000; position: relative; width: 192px;max-height:10em;"><div role="menu" style="padding: 16px 0px; display: table-cell; user-select: none; width: 192px;"></div></div></div></div></div>',o);setTimeout((()=>{document.addEventListener("mousedown",(e=>{r.includes(e.which)&&(n.contains(e.target)||n.remove())}),{once:!0})}),100)})),void o.forEach((t=>{const o=JSON.parse(localStorage.getItem(t.id.toString()));if(o&&o.bookmarked){const o=n(t.name,"mdi-console");e.insertBefore(o,i.nextSibling)}}))}document.querySelector("#preservationConfigDropdown")&&document.querySelector("#preservationConfigDropdown").remove()}}),10)}function i(t,n,o){console.log(o),o?.forEach((n=>{const o=document.createElement("div");o.id="config-"+n.id,o.classList.add("saved-config-item"),o.style.opacity="0",o.addEventListener("mouseenter",(e=>{o.style.backgroundColor="var(--md-sys-color-outline-variant)"})),o.addEventListener("mouseleave",(e=>{o.style.backgroundColor="var(--md-sys-color-on-secondary)"})),o.addEventListener("click",(e=>{if(!["saved-config-delete","config-bookmark-container","mdi-star","mdi-star-outline"].includes(e.target.className))for(var t in n)if(n.hasOwnProperty(t)){var o="#"+t,i=document.querySelector(o);i&&("checkbox"==i.type?i.checked=!!n[t]:"select-one"==i.type?"image_normalization_tiff"==i.id&&(i.value=1===n[t]?"TIFF":"JPEG2000"):"range"==i.type?(i.value=n[t],i.dispatchEvent(new CustomEvent("input",{bubbles:!0}))):i.value=n[t],i.dispatchEvent(new CustomEvent("change",{bubbles:!0})))}}));const i=document.createElement("div");i.classList.add("saved-config-information");const a=document.createElement("label");a.textContent=n.name,a.style.fontWeight="500",a.style.marginBottom="0";const s=document.createElement("label");s.classList.add("config-text-label");const r=document.createElement("div"),l=document.createElement("label");l.for="config-description-"+n.id,l.textContent="Description: ";const d=document.createElement("span");d.textContent=n.description,d.id="config-description-"+n.id,r.appendChild(l),r.appendChild(d);const c=document.createElement("div"),u=document.createElement("label");u.id="config-user-"+n.id,u.textContent="User: ";const p=document.createElement("span");p.id="config-user-"+n.id,p.textContent=n.user,c.appendChild(u),c.appendChild(p),s.appendChild(r),s.appendChild(c),i.appendChild(a),i.appendChild(s);const m=document.createElement("button");m.classList.add("saved-config-delete"),m.addEventListener("mouseenter",(e=>{o.style.backgroundColor="var(--md-sys-color-on-secondary)",m.style.backgroundColor="#ff2c2c"})),m.addEventListener("mouseleave",(e=>{m.style.backgroundColor="var(--md-sys-color-error-container)",e.toElement==o||e.toElement==o.querySelector(".saved-config-information")?o.style.backgroundColor="var(--md-sys-color-outline-variant)":o.style.backgroundColor="var(--md-sys-color-on-secondary)"})),m.addEventListener("click",(t=>{confirm("Deleting a config is permanent and cannot be reverted, do you wish to continue?")&&(o.style.opacity="1",async function(t){const n=`${window.location.origin}/preservation/${t}`,o=await PydioApi._PydioRestClient.getOrUpdateJwt();return fetch(n,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${o}`}}).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()})).then((t=>{if(t)return e(),t;throw new Error("Delete operation failed.")})).catch((e=>{console.error("Fetch error:",e),Curate.ui.modals.curatePopup({title:"Error",type:"error",content:"There was an error deleting your configuration. Please try again, or contact support if the problem persists."}).fire()}))}(n.id).then((e=>{console.info("Delete successful:",e),o.style.animation="none",o.offsetWidth,o.style.animation="config-slide-and-fade-in 0.4s forwards reverse",setTimeout((e=>{o.remove()}),400)})).catch((e=>{o.style.animation="delete-failed-shake-animation 0.5s 0s infinite";const t=o.style.backgroundColor;o.style.backgroundColor="red",console.error("Delete failed:",e),setTimeout((()=>{o.style.animation="none",o.style.backgroundColor=t}),500)})))})),m.textContent="Delete Config";const h=document.createElement("div");h.classList.add("config-bookmark-container"),h.addEventListener("click",(e=>{e.target.classList.contains("mdi-star-outline")?(console.info("bookmarked!"),localStorage.setItem(n.id,JSON.stringify({name:n.name,bookmarked:!0})),e.target.classList.remove("mdi-star-outline"),e.target.classList.add("mdi-star")):e.target.classList.contains("mdi-star")&&(console.info("un-bookmarked!"),localStorage.setItem(n.id,JSON.stringify({name:n.name,bookmarked:!1})),e.target.classList.remove("mdi-star"),e.target.classList.add("mdi-star-outline"))}));const g=document.createElement("span"),f=JSON.parse(localStorage.getItem(n.id.toString()));f&&f.bookmarked?g.classList.add("mdi-star"):g.classList.add("mdi-star-outline"),h.appendChild(g),o.appendChild(h),o.appendChild(i),o.appendChild(m),t.appendChild(o)}));const i=t.querySelectorAll(".saved-config-item");if(i?.forEach(((e,t)=>e.style.animationDelay=.55*t/i.length+"s")),i?.forEach(((e,t,n)=>{const o=.05*(t+1),i=1-o;e.style.animationDelay=`${o}s`,e.style.animationDuration=`${i}s`})),!o||0==o?.length){const e=document.createElement("div");e.textContent="No Saved Preservation Configs Found",e.style.margin="3em",e.style.width="80%",e.style.height="10%",e.style.textAlign="center",e.style.display="flex",e.style.color="white",e.style.background="var(--md-sys-color-outline-variant-50)",e.style.justifyContent="center",e.style.alignItems="center",e.style.borderRadius="1.5em",n.appendChild(e)}}function a(e,t){const n=document.createElement("div");if(n.classList.add("input-container"),"info"===e.type){const t=document.createElement("div");t.classList.add("config-info"),t.textContent=e.text,n.appendChild(t)}if("text"===e.type){const t=document.createElement("label");t.textContent=e.label,t.classList.add("config-text-label");const o=document.createElement("input");o.id=e.name,o.setAttribute("type","text"),o.classList.add("config-text-input"),n.appendChild(t),n.appendChild(o)}else if("toggle"===e.type){const t=document.createElement("label");t.textContent=e.label,t.classList.add("config-text-label");const o=document.createElement("input");o.setAttribute("type","checkbox"),o.classList.add("tgl"),o.classList.add("tgl-light"),o.id=e.name;const i=document.createElement("label");i.classList.add("tgl-btn"),i.htmlFor=e.name,n.appendChild(t),n.appendChild(o),n.appendChild(i)}else if("dropdown"===e.type){const t=document.createElement("label");t.textContent=e.label,t.classList.add("config-text-label");const o=document.createElement("select");o.id=e.name,o.classList.add("config-dropdown-select"),e.options.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,o.appendChild(t)})),n.appendChild(t),n.appendChild(o)}else if("slider"==e.type){const t=document.createElement("label");t.textContent=e.label,t.classList.add("config-text-label");const i=document.createElement("div");i.classList.add("config-slider-container");const a=document.createElement("div");a.classList.add("config-slider-value"),a.textContent=e.min;const s=document.createElement("input");s.id=e.name,s.setAttribute("type","range"),s.classList.add("config-slider"),s.setAttribute("min",e.min),s.setAttribute("max",e.range),s.setAttribute("step",e.step),s.setAttribute("value",e.min);const r=document.createElement("div");r.classList.add("config-slider-minmax-container");const l=document.createElement("span");l.classList.add("config-slider-minmax"),l.textContent=e.min;const d=document.createElement("span");d.classList.add("config-slider-minmax"),d.textContent=e.range,s.addEventListener("input",(()=>{const e=s.value;a.textContent=e})),r.appendChild(l);for(var o=0;o<e.range-2;o++){const e=document.createElement("div");e.classList.add("config-slider-dot"),r.appendChild(e)}r.appendChild(d),i.appendChild(r),i.appendChild(a),i.appendChild(s),n.appendChild(t),n.appendChild(i)}e.suboptions&&n.addEventListener("change",(t=>{const n=e.name;t.target.id==n&&(t.target.checked?e.suboptions.forEach((e=>{if("info"==e.type)return;const t="#"+e.name;document.querySelector(t).disabled=!1,document.querySelector(t).parentElement.style.opacity="1"})):e.suboptions.forEach((e=>{if("info"==e.type)return;const t="#"+e.name;document.querySelector(t).disabled=!0,document.querySelector(t).checked=!1,document.querySelector(t).parentElement.style.opacity="0.3"})))})),t.appendChild(n),e.suboptions&&e.suboptions.forEach((e=>{a(e,n),setTimeout((t=>{if("info"==e.type)return;const n="#"+e.name;document.querySelector(n).disabled=!0,document.querySelector(n).parentElement.style.opacity="0.3"}),50)}))}const s=[{category:"Details",inputs:[{label:"Config Name",name:"name",type:"text"},{label:"Config Description",name:"description",type:"text"}]},{category:"Normalisation",inputs:[{label:"Normalise Objects",name:"normalize",type:"toggle",suboptions:[{label:"Image Normalisation Format",name:"image_normalization_tiff",type:"dropdown",options:["TIFF","JPEG2000"]}]}]},{category:"Dissemination",inputs:[{label:"Create Dissemination Package",name:"dip_enabled",type:"toggle",suboptions:[{label:"Dissemination Information",name:"dip_info",type:"info",text:"Create dissemination packages from AIPs generated by this config. Created DIPs will automatically be connected to the linked description of the source data. For this option to work, you must configure a connected AtoM instance."},{label:"Go to AtoM Configuration",name:"atom_config",type:"button",text:"Go to AtoM Configuration",onclick:e=>{Curate.ui.modals.curatePopup({title:"Connect to Your AtoM Instance"},{afterLoaded:e=>{const t=document.createElement("connect-to-atom");e.querySelector(".config-main-options-container").appendChild(t)}}).fire()}}]}]},{category:"Packaging and Compression",inputs:[{label:"AIP Packaging Type",name:"process_type",type:"dropdown",options:["standard","eark"]},{label:"Compress AIPs",name:"compress_aip",type:"toggle",suboptions:[{label:"Warning",name:"compression_warning",type:"info",text:"Compressing AIPs will make their contents unsearchable and prevent descriptive metadata from being reassociated with output objects. You can compress your AIPs for distribution or deep-storage while conserving the uncompressed AIP by right-clicking an AIP in a workspace."},{label:"Compression Algorithm",name:"compression_algorithm",type:"dropdown",options:["tar","tar_bzip2","tar_gzip","s7_copy ","s7_bzip2","s7_lzma"]},{label:"Compression Level",name:"compression_level",type:"slider",min:1,range:9,step:1}]}]},{category:"Transfer Options",inputs:[{label:"Generate Transfer Structure Report",name:"gen_transfer_struct_report",type:"toggle"},{label:"Document Empty Directories",name:"document_empty_directories",type:"toggle"},{label:"Extract Packages",name:"extract_packages",type:"toggle",suboptions:[{label:"Delete Packages After Extraction",name:"delete_packages_after_extraction",type:"toggle"}]}]}];window.addEventListener("load",(t=>{!async function(){try{await((e,t=50)=>new Promise((n=>{const o=setInterval((()=>{void 0!==window[e]&&(clearInterval(o),n(window[e]))}),t)})))("PydioApi");e()}catch(e){console.error("An error occurred:",e)}}(),setTimeout((()=>{document.addEventListener("mousedown",(e=>{document.querySelector('.context-menu [role="menu"]')&&document.querySelector('.context-menu [role="menu"]').contains(e.target)||document.querySelector(".main-files-list")&&(3==e.which&&document.querySelector(".main-files-list").contains(e.target)?document.querySelector('.context-menu [role="menu"]')&&!document.querySelector("#preservationConfigDropdown")?setTimeout((()=>{o(document.querySelector('.context-menu [role="menu"]'))}),100):function(e){if(document.querySelector("#\\/recycle_bin")&&document.querySelector("#\\/recycle_bin").contains(e.target))return void(document.querySelector("#preservationConfigDropdown")&&document.querySelector("#preservationConfigDropdown").remove());const t=new MutationObserver((e=>{e.forEach((e=>{e.addedNodes.forEach((e=>{if(e.nodeType===Node.ELEMENT_NODE){const n=e.querySelector('.context-menu [role="menu"]');n&&(o(n),t.disconnect())}}))}))}));t.observe(document.body,{childList:!0,subtree:!0,once:!0})}(e):document.querySelector("#preservationConfigDropdown")&&setTimeout((()=>{document.querySelector("#preservationConfigDropdown")&&document.querySelector("#preservationConfigDropdown").remove()}),150))}),150)}))}))},7627:()=>{document.addEventListener("change",(function(e){if(1===pydio._dataModel._selectedNodes.length&&e.target.nextElementSibling?.textContent.includes("Enable OAI Harvesting")&&"checkbox"===e.target.type){const t=e.target.nextElementSibling?.textContent.includes("Enable OAI-PMH Harvesting"),n=pydio._dataModel._selectedNodes[0],o=!n._isLeaf;t&&o&&Curate.ui.modals.curatePopup({title:"Send Update to Children",buttonType:"okCancel"},{afterLoaded:e=>{e.querySelector(".config-main-options-container").appendChild(function(){const e=document.createElement("div");e.style="margin: 12px 0px 6px;";const t=document.createElement("div");t.style="cursor: pointer; position: relative; overflow: visible; display: table; height: 52px; width: 100%; background-color: var(--md-sys-color-surface-variant); border-radius: 4px; margin-top: 8px; font-size: 15px; padding: 15px 10px 4px;";const n=document.createElement("input");n.type="checkbox",n.id="inheritValues",n.checked=!1,n.style="position: absolute; cursor: inherit; pointer-events: all; opacity: 0; width: 100%; height: 100%; z-index: 2; left: 0px; box-sizing: border-box; padding: 0px; margin: 0px;";const o=document.createElement("div");o.style="display: flex; width: 100%; height: 100%;";const i=document.createElement("div");i.style="transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; float: left; position: relative; display: block; flex-shrink: 0; width: 36px; margin-right: 8px; margin-left: 0px; padding: 4px 0px 6px 2px;";const a=document.createElement("div");a.style="transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; width: 100%; height: 14px; border-radius: 30px; background-color: var(--md-sys-color-outline-variant);";const s=document.createElement("div");s.style="color: rgb(25, 28, 30); background-color: var(--md-sys-color-primary); transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; box-sizing: border-box; font-family: Roboto, sans-serif; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px; border-radius: 50%; position: absolute; top: 1px; left: 100%; width: 20px; height: 20px; line-height: 24px; margin-left: -20px;";const r=document.createElement("label");return r.style="float: left; position: relative; display: block; width: calc(100% - 46px); line-height: 24px; color: rgb(25, 28, 30); font-family: Roboto, sans-serif;",r.textContent="Update Children With New Value ",i.appendChild(a),i.appendChild(s),o.appendChild(i),o.appendChild(r),t.appendChild(n),t.appendChild(o),e.appendChild(t),n.addEventListener("change",(function(){n.checked?(a.style.backgroundColor="rgba(0, 102, 137, 0.5)",s.style.left="100%",r.textContent="Update Children With New Value (yes)"):(s.style.left="55%",a.style.backgroundColor="var(--md-sys-color-outline-variant)",r.textContent="Update Direct Descendant Files With New Value (no)")})),n.dispatchEvent(new Event("change")),e}())},onOk:()=>{const t=this.querySelector("#inheritValues[type='checkbox']");if(t&&t.checked){(async function(e,t=100){const n=async(e,n=0)=>{const o={NodePaths:[e+"/*"],Limit:t.toString(),Offset:n.toString()};return await Curate.api.fetchCurate("/a/tree/stats","POST",o)};let o=[],i=0,a=!0;for(;a;){const s=(await n(e,i)).Nodes||[];o=o.concat(s),a=s.length===t,i+=s.length}return o})(Curate.workspaces.getOpenWorkspace()+"/"+n._path).then((t=>{const n=[];t.forEach((e=>"LEAF"===e.Type?n.push(e.Uuid):null));var o,i;(o=n,i=50,Array.from({length:Math.ceil(o.length/i)},((e,t)=>o.slice(t*i,t*i+i)))).forEach((t=>{const n=((e,t)=>({MetaDatas:e.map((e=>({NodeUuid:e,Namespace:"usermeta-export-oai-harvest-enabled",JsonValue:t.toString(),Policies:[{Action:"READ",Effect:"allow",Subject:"*"},{Action:"WRITE",Effect:"allow",Subject:"*"}]}))),Operation:"PUT"}))(t,e.target.checked);Curate.api.fetchCurate("/a/user-meta/update","PUT",n)}))})).catch((e=>{console.error("Error retrieving nodes:",e)}))}}}).fire()}}))},9093:()=>{const e={upload:{enforceWorkspaceUpload:{event:"drop",target:document,description:"enforce workspace upload permissions for standard users",handler:e=>{pydio.user.getIdmUser().then((t=>{if(!["quarantine","personal-files","common files"].includes(Curate.workspaces.getOpenWorkspace())&&!t.Roles.find((e=>e.Label="Admin"))&&e.dataTransfer?.files.length>0){e.stopImmediatePropagation();const t="<div>\n                            <p>Please upload your content to the Quarantine workspace instead. This will ensure your content is correctly scanned for malware before being released into the system.</p>\n                            <p>You can also upload your content to the Personal and Common Files workspaces, which is scanned for malware once but will not be quarantined and cannot be released into the system.</p>\n                        </div>";Curate.ui.modals.curatePopup({title:"You do not have permission to upload to this workspace",type:"warning",content:t}).fire()}}))}}},sharedSite:{enforceNoCustomActions:{event:"readystatechange",target:document,description:"enforce no custom actions for shared sites",handler:e=>{if(console.log("shared site enforce no custom actions"),window.location.pathname.includes("/public/"),window.location.pathname.includes("/public/")){const e=document.querySelector(".toolbars-button-menu.action-group_more_action"),t=Array.from(document.querySelector("#main-toolbar").children).find((e=>"button"===e.type&&e.querySelector(".action-local_toggle_theme"))),n=Array.from(document.querySelectorAll(".toolbars-button-menu")).find((e=>1==e.classList.length));e&&e.remove(),t&&t.remove(),n&&n.remove()}}}},move:{}};document.addEventListener("DOMContentLoaded",(t=>{var n;n=e,Object.entries(n).forEach((([e,t])=>{Object.entries(t).forEach((([t,{event:o,target:i,handler:a}])=>{console.log("attaching event handler",n[e][t]);try{i.addEventListener(o,a)}catch(o){console.error("could not attach: ",n[e][t])}}))}))}))},2937:()=>{const e=[e=>e.querySelector(".icomoon-cells")?.closest("button"),e=>e.querySelector(".layout-fill")];window.addEventListener("load",(function t(){if(window.location.pathname.includes("/login")){const e=new MutationObserver((()=>{window.location.pathname.includes("/login")||(e.disconnect(),t())}));e.observe(document.documentElement,{childList:!0,subtree:!0})}else pydio?.user?(pydio.user.isAdmin||pydio.observe("context_changed",(t=>{if("Settings"===t._label){const t=new MutationObserver((()=>{let n=!1;e.forEach((e=>{const t=e(document);t&&(t.remove(),n=!0)})),n&&t.disconnect()}));t.observe(document.body,{childList:!0,subtree:!0})}})),window.removeEventListener("load",t)):setTimeout(t,100)}))},6678:()=>{const e=e=>{try{return pydio._dataModel._selectedNodes[0]._metadata.get(e)||null}catch(e){return null}},t=(e,t,n,o)=>{const i=Curate.workspaces.getOpenWorkspace();return n&&"File has not been scanned"!=e||"quarantine"!=i||"Scan Limit Exceeded"===n?n&&"File has not been scanned"!=e||"quarantine"===i||"Scan Limit Exceeded"===n?"Quarantined"==n?`File in quarantine, current period: ${(e=>Math.floor((new Date-new Date(e))/864e5))(o)} days.`:"Scan Limit Exceeded"==n?"File is too large to be scanned.":"Passed"!=n||"personal-files"!=i&&"common files"!=i?"Passed"==n?"File has passed an initial scan but will not be scanned again, please move it into the Quarantine workspace.":"Released"==n?"File has been released from quarantine.":"Risk"==n?"File has not completed its quarantine period and is at risk.":void 0:`File has passed the ${i.replace("-"," ")} scan.`:"This file has not been scanned and is at risk. Please move it into the Quarantine workspace to be scanned.":"This file has not been scanned and is at risk."},n=(e,t)=>{const n=(e,t,n={})=>{const o=document.createElement("div");return o.className=e,o.textContent=t,Object.assign(o.style,n),o},o=n("infoPanelRow",null,{padding:"0px 16px 6px"}),i=n("infoPanelLabel",e,{fontWeight:"415"}),a=n("infoPanelValue",t);return o.appendChild(i),o.appendChild(a),o};function o(o){var i=e("files")?.[0]?.matches?.[0]?.id??"File has not been characterised",a=["usermeta-virus-scan-first","usermeta-virus-scan-second"].map((t=>e(t)||"File has not been scanned")),s=pydio._dataModel._selectedNodes[0]._metadata.get("etag");s.endsWith("-1")&&(s="Local hash");var r=e("mime");const l=e("usermeta-virus-scan"),d=e("usermeta-virus-scan-passed-date");var c=t(...a,l,d);setTimeout((function(){let e=document.createElement("div");e.style.marginTop="-11px",e.id="curateAdditionalInfo";let t=n("Pronom ID",i);"File has not been characterised"!==i&&(t.style.cursor="pointer",t.style.transition="all 0.2s ease-in-out",t.addEventListener("mouseenter",(e=>{t.style.textDecoration="underline",t.style.backgroundColor="rgba(153, 153, 153, 0.2)"})),t.addEventListener("mouseleave",(e=>{t.style.textDecoration="none",t.style.backgroundColor="transparent"})),t.addEventListener("click",(e=>{window.open(`https://www.nationalarchives.gov.uk/pronom/${i}`)})));let l=n("First virus scan result",a[0]),d=n("Second virus scan result",a[1]),u=(n("Mimetype",r),n("Status",c));o.querySelector(".panelContent").childNodes.forEach((e=>{e.innerText.includes("ETag")&&(e.firstChild.innerText="Checksum",e.querySelector(".infoPanelValue").innerText=s)}));let p=document.createElement("HR"),m=document.createElement("div"),h=document.createElement("div");h.style.marginBottom="5px",m.textContent="Quarantine Info",m.id="quarantineInfoLabel",m.style.color="rgb(77, 122, 143)",m.style.fontSize="14px",m.style.fontWeight="500",m.style.marginLeft="15px",m.style.marginBottom="10px",e.appendChild(t),e.appendChild(p),e.appendChild(m),e.appendChild(u),e.appendChild(l),e.appendChild(d),e.appendChild(h),o.querySelector("#curateAdditionalInfo")?(Array.from(document.querySelectorAll(".panelCard")).find((e=>e.textContent.includes("File Info")))?.querySelector("#curateAdditionalInfo")?.remove(),o.appendChild(e)):o.appendChild(e)}),5)}const i=(e,t)=>{t=Array.from(document.querySelectorAll(".panelCard")).find((e=>e.textContent.includes("File Info")));e.memo._selectedNodes&&0!=e.memo._selectedNodes.length&&e.memo._selectedNodes[0]!=a&&t&&t.querySelector(".panelContent")&&(o(t),a=e.memo._selectedNodes[0])};var a;const s=e=>{if(e)return pydio._dataModel._observers.selection_changed.includes(i)||pydio._dataModel.observe("selection_changed",(e=>{i(e)})),e.firstElementChild.addEventListener("click",(t=>{e.querySelector('[class*="mdi-chevron-"]').classList.contains("mdi-chevron-up")||e.querySelector('[class*="mdi-chevron-"]').classList.contains("mdi-chevron-down")})),function(e,t){if(!e||!e.parentElement)return void console.error("The element or its parent is not defined.");const n=new MutationObserver((o=>{for(let i of o)if(i.removedNodes.length)for(let o of i.removedNodes)if(o===e||o.contains(e))return t(),void n.disconnect()}));n.observe(e.parentElement,{childList:!0,subtree:!0})}(e.querySelector(".panelContent"),(()=>{e.querySelector("#curateAdditionalInfo").remove()})),void(e.querySelector(".panelContent")&&o(e))};new MutationObserver(((e,t)=>{for(const t of e)if("childList"===t.type)for(const e of t.addedNodes)e instanceof HTMLElement&&e.classList.contains("panelCard")&&e.innerText.includes("File Info")?s(e):e instanceof HTMLElement&&e.classList.contains("panelContent")&&e.parentElement.classList.contains("panelCard")&&e.parentElement.innerText.includes("File Info")&&s(e.parentElement)})).observe(document.documentElement,{childList:!0,subtree:!0})},3663:()=>{window.addEventListener("load",(function(){new Promise(((e,t)=>{!function t(){"undefined"!=typeof pydio?e():setTimeout(t,100)}()})).then((()=>{pydio._dataModel.observe("selection_changed",(function(e){setTimeout((()=>{const e=document.querySelector("#info_panel > div");e&&e.scrollTo({top:0,left:0})}),50)}))}))}))},7711:()=>{const e=window.curateDistrobution||"Soteria+",t=()=>{console.log("message modifier");const n=pydioBootstrap.parameters.get("i18nMessages");Object.keys(n).forEach((t=>{"string"==typeof n[t]&&(n[t]=n[t].replace(/Pydio\s*Cells/gi,e).replace(/(?<!Pydio\s*)Cells/gi,e))})),window.removeEventListener("load",t)};window.addEventListener("load",t)},2887:()=>{function e(e){let t=document.createElement("div"),n=document.createElement("button"),o=document.createElement("span"),i=document.createElement("text"),a=document.createElement("hr");i.textContent=e,i.style.marginTop="1em",o.style.ariaHidden="true",o.innerHTML="&times;",n.style.ariaLabel="Close alert",n.style.type="button",n.style.backgroundColor="white",n.style.border="0",n.style.position="absolute",n.style.top="0",n.style.right="0",n.onclick=function(){this.parentNode.className="slideOut",setTimeout((function(){t.remove()}),1e3)},n.appendChild(o),t.style.backgroundColor="white",t.style.borderRadius="0.5em",t.style.width="16em",t.style.height="auto",t.style.padding="1.8em",t.style.paddingBottom="0em",t.style.margin="2em",t.style.position="absolute",t.style.bottom="5em",t.style.right="0",t.style.boxShadow="0 10px 16px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)",t.className="slideIn",a.style.borderTop="1px solid black",a.style.marginTop="1em",a.className="lineLoad",n.appendChild(o),t.appendChild(n),t.appendChild(i),t.appendChild(a),document.querySelector("body").appendChild(t),setTimeout((function(){t.classList.remove("slideIn")}),1e3),setTimeout((function(){t.className="slideOut",setTimeout((function(){t.remove()}),1e3)}),6e3)}let t=e=>new Promise((t=>setTimeout(t,e)));function n(){setTimeout((function(){let e=["Generate mimetype report","Export Archivematica JSON"];for(let t=0;t<e.length;t++){let n="//div[text()='"+e[t]+"']";try{document.evaluate(n,document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue.parentElement.parentElement.parentElement.parentElement.remove()}catch(e){}}}),1)}document.addEventListener("DOMContentLoaded",(function(){let o;!async function(){let n=1;for(;0!==n;)if(await t(100),null==document.querySelector("#workspace_toolbar"));else if(n=0,window.location.href.includes("/public/"))if(null==document.querySelector("#pydio_shared_folder")){let t=document.querySelector("#pydio_dropbox_template").firstElementChild.firstElementChild;t.style.backgroundColor="#9fd0c7";let n=t.firstElementChild;n.style.marginTop="1em",n.style.marginBottom="1em",n.style.marginLeft="1em";let o=document.querySelector(".segment");o.textContent="Directory: "+o.textContent,e("Welcome to Curate, simply drag and drop files in to the dashed area to upload.")}else{let t=document.querySelector("#pydio_shared_folder").firstElementChild.firstElementChild;t.style.backgroundColor="#9fd0c7";let n=t.firstElementChild;n.style.marginTop="1em",n.style.marginBottom="1em",n.style.marginLeft="1em";let i="Welcome to Curate, here you can view or download files shared with you by your collaborators.";if(0==pydio.Controller.actions.toJSON()[8][1].deny)var o=i+" You can also create folders and upload new files.";else o=i;e(o)}}();try{o=document.querySelector("#pydio_shared_folder")}catch(e){}o&&setTimeout((function(){document.querySelector(".toolbars-button-menu").addEventListener("click",n)}),3e3)}))},1578:()=>{window.addEventListener("load",(function(){var t=Object.fromEntries(pydioBootstrap.parameters).i18nMessages;Object.entries(e).forEach((function(e){t[e[0]]=e[1]}))}));var e={"ajax_gui.tour.welcomemodal.title":"Welcome to Curate","ajax_gui.tour.welcomemodal.subtitle":"Drag'n'drop a photo of you for your profile! This quick tour will guide you through the web interface.","ajax_gui.tour.welcomemodal.start":"Start the tour","ajax_gui.tour.workspaces.1":"Workspaces are top-level folders that help you manage your archiving workflow and organise your data. The Personal Files workspace can only be accessed by you and the Quarantine, Appraisal and Archive workspaces are shared with your workgroup. The Package Templates workspace is common to all accounts and is read only.","ajax_gui.tour.workspaces.2":"You can upload into the Personal Files and Quarantine workspaces, move files to Appraisal to work on them and deposit packages in the Archive when you are finished.","ajax_gui.tour.globsearch.title":"Global Search","ajax_gui.tour.globsearch.1":"Use this search form to find files or folders in any workspace. Only the first 5 results are shown, enter a workspace to get more results, and more search options. Tip: you can use an asterisk as a wild card.","ajax_gui.tour.globsearch.2":"When no search is entered, the history of your recently accessed files and folder is displayed instead.","ajax_gui.tour.openworkspace.title":"Open a workspace","ajax_gui.tour.openworkspace":"At the first connection, your history is probably empty. Enter the Personal or Quarantine workspaces to start adding files. Tip: files are virus checked when they are uploaded and should be kept in Quarantine for 30 days, after which they are scanned again.","ajax_gui.tour.create-menu.title":"Add files","ajax_gui.tour.create-menu":"Start adding new files or folders to the current workspace.","ajax_gui.tour.display-bar.title":"Display Options","ajax_gui.tour.display-bar":"This toolbar allows you to change the display: switch to thumbnails or detail mode depending on your usage, and sort files by name, date, etc...","ajax_gui.tour.infopanel.title":"Info Panel","ajax_gui.tour.infopanel.1":"Here, you will find a preview and comprehensive information about your current selection: file information, virus scan status, metadata, etc.","ajax_gui.tour.infopanel.2":"You can close this panel by using the info button in the display toolbar","ajax_gui.tour.uwidget.title":"User Settings","ajax_gui.tour.uwidget.addressbook":"Directory of all the users accessing to the platform. Create your own users, and constitute teams that can be used to share resources","ajax_gui.tour.uwidget.alerts":"Alerts panel will inform you when a user with whom you shared some resources did access it. They can be sent to you directly by email.","ajax_gui.tour.uwidget.menu":"Access to other options : manage your profile and password, view all of the public links you have created, send a support message, configure the Archivematica Connector and sign out of the platform.","ajax_gui.tour.uwidget.home":"Go back to the welcome panel with this button"}},5092:()=>{[{name:"he",url:"https://cdn.jsdelivr.net/npm/he@1.2.0/he.min.js"},{name:"swal",url:"https://cdn.jsdelivr.net/npm/sweetalert2@11"},{name:"papaparse",url:"https://cdn.jsdelivr.net/npm/papaparse@5.4.1/papaparse.min.js"},{name:"chart.js",url:"https://cdn.jsdelivr.net/npm/chart.js"},{name:"spark-md5",url:"https://cdnjs.cloudflare.com/ajax/libs/spark-md5/3.0.2/spark-md5.min.js"}].forEach((e=>{let t=document.createElement("script");t.src=e.url,t.onerror=function(){console.error("Failed to load external library: ",e.name,"please reload the page or contact your admin if the issue persists.")},document.head.appendChild(t)}))},98:(e,t,n)=>{"use strict";const o={fetchCurate:async function(e,t="POST",n){if(!e)throw new Error("No endpoint provided");try{const o=await PydioApi._PydioRestClient.getOrUpdateJwt(),i={method:t,headers:{accept:"application/json","accept-language":navigator.language+",en-GB,en-US;q=0.9,en;q=0.8",authorization:"Bearer "+o,"content-type":"application/json","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-origin","x-pydio-language":pydio.user.getPreference("lang")},referrer:window.location.href,referrerPolicy:"strict-origin-when-cross-origin",mode:"cors",credentials:"include"};["GET","HEAD"].includes(t)||(i.body=JSON.stringify(n));const a=await fetch(window.location.origin+e,i);if(!a.ok)throw new Error("Network response was not ok");return await a.json()}catch(e){throw console.error("Curate fetch error:",e),e}},files:{createFiles:async function(e){if(!e)throw new Error("No nodes provided");async function t(e,t){const n={MetaDatas:[],Operation:"PUT"};for(const o in e)"path"!==o&&e[o].forEach((e=>{const i=`usermeta-${o}-${e.field}`,a={NodeUuid:t,Namespace:i,JsonValue:JSON.stringify(e.value),Policies:[{Action:"READ",Effect:"allow",Subject:"*"},{Action:"WRITE",Effect:"allow",Subject:"*"}]};n.MetaDatas.push(a)}));return n}const n=e.nodes.map((async e=>{const t=e.path.split("/").pop(),n=(await Curate.api.fetchCurate("/a/tree/create","POST",{Nodes:[{Path:e.path,Type:"LEAF"}],TemplateUUID:""})).Children[0].Path;return{filename:t,uuid:(await Curate.api.fetchCurate("/a/meta/bulk/get","POST",{Limit:200,NodePaths:[n]})).Nodes[0].Uuid,node:e}})),o=await Promise.all(n);for(const{filename:e,uuid:n,node:i}of o){const e=await t(i,n);await Curate.api.fetchCurate("/a/user-meta/update","PUT",e)}},getFileData:async function(e,t="text"){if(!e)throw new Error("No node provided");try{await PydioApi._PydioRestClient.getOrUpdateJwt();const n=await pydio.ApiClient.buildPresignedGetUrl(e),o=await fetch(n);if(!o.ok)throw new Error("Network response was not ok");if("text"===t)data=await o.text();return data}catch(e){throw console.error("Error fetching object:",e),e}},updateMetadata:async function(e,t){if(!t)throw new Error("No metadata provided");if(!e)throw new Error("No node provided");const n=((e,t)=>{const n={MetaDatas:[],Operation:"PUT"};for(const o in t)t[o].forEach((t=>{const i=`usermeta-${o}-${t.field}`,a={NodeUuid:e._metadata.get("uuid"),Namespace:i,JsonValue:JSON.stringify(t.value),Policies:[{Action:"READ",Effect:"allow",Subject:"*"},{Action:"WRITE",Effect:"allow",Subject:"*"}]};n.MetaDatas.push(a)}));return n})(e,t);return await Curate.api.fetchCurate("/a/user-meta/update","PUT",n)}}},i={getOpenWorkspace:function(){return pydio._dataModel._rootNode._label.toLowerCase()==pydio.user.id.toLowerCase()?"personal-files":pydio._dataModel._rootNode._label.toLowerCase().replace(/^\d+\.\s*/,"")}},a={modals:{curatePopup:function(e,t){const n=e.title,o=e.message,i=e.type,a=e.content,s=e.buttonType||"close",r=t?.afterLoaded||function(){},l=t?.afterClosed||function(){},d=t?.onOk||function(){},c=t?.onCancel||function(){},u={warning:{color:"#FFA500",icon:"mdi-alert"},error:{color:"#FF0000",icon:"mdi-alert-circle"},success:{color:"#008000",icon:"mdi-check-circle"},info:{color:"#0000FF",icon:"mdi-information"}};return{fire:function(){const e=document.createElement("div");e.classList.add("config-modal-container"),e.style.display="flex",e.addEventListener("click",(function(t){y(t,e)}),{once:!0});const t=document.createElement("div");t.classList.add("config-modal-content"),i&&(t.style.borderTop=`4px solid ${u[i].color}`);const p=document.createElement("div");if(p.classList.add("config-popup-title"),i){const e=document.createElement("i");e.classList.add("mdi",u[i].icon),e.style.color=u[i].color,e.style.fontSize="24px",e.style.marginRight="10px",p.appendChild(e)}const m=document.createTextNode(n);p.appendChild(m);const h=document.createElement("div");if(h.classList.add("config-main-options-container"),h.style.width="100%",o){const e=document.createElement("div");e.classList.add("config-popup-message"),e.textContent=o,h.appendChild(e)}if(a){const e=document.createElement("div");e.innerHTML=a,h.appendChild(e)}const g=document.createElement("div");if(g.classList.add("action-buttons"),"okCancel"===s){const t=document.createElement("button");t.classList.add("config-modal-ok-button"),t.textContent="OK",t.addEventListener("click",(()=>{d(),f(e)}));const n=document.createElement("button");n.classList.add("config-modal-cancel-button"),n.textContent="Cancel",n.addEventListener("click",(()=>{c(),f(e)})),g.appendChild(t),g.appendChild(n)}else{const t=document.createElement("button");t.classList.add("config-modal-close-button"),t.textContent="Close",t.addEventListener("click",(()=>{f(e)})),g.appendChild(t)}function f(e){e.remove(),l()}function y(e,t){e.target===t?f(t):t.addEventListener("click",(function(e){y(e,t)}),{once:!0})}t.appendChild(p),t.appendChild(h),t.appendChild(g),e.appendChild(t),document.body.appendChild(e),e.addEventListener("keyup",(function(e){e.stopPropagation()})),r(e)}}}}},s=e=>{const t={"ISAD(G)":({},{sections:[{title:"Identity Statement",fields:["reference code(s)","title","date(s)","level of description","extent and medium of the unit of description"]},{title:"Context",fields:["name of creator(s)","administrative/biographical history","archival history","immediate source of acquisition or transfer"]},{title:"Content And Structure",fields:["scope and content","appraisal, destruction and scheduling information","accruals","system of arrangement"]},{title:"Conditions Of Access And Use",fields:["conditions governing access","conditions governing reproduction","language/scripts of material","physical characteristics and technical requirements","finding aids"]},{title:"Allied Materials",fields:["existence and location of originals","existence and location of copies","related units of description","publication note"]},{title:"Notes",fields:["note"]},{title:"Description Control",fields:["archivists note","rules or conventions","date(s) of descriptions"]}]}),DC:({},{fields:["contributor","coverage","creator","date","description","format","identifier","language","publisher","relation","rights","source","subject","title","type"]})};return e&&e in t?t[e]:e?void console.error("invalid schema"):t},r={schemas:{getSchemas:function(e){return s(e)}}};const l={context:{page:window.location.pathname,lastRightClickedElement:null,selection:null}};function d(e){2===e.button&&(l.context.lastRightClickedElement=e.target,l.context.page=window.location.pathname,l.context.selection=pydio?._dataModel._selectedNodes||null)}window.addEventListener("load",(()=>document.addEventListener("mousedown",d)));const c={api:o,workspaces:i,ui:a,metadata:r,contextualHelp:l};window.Curate=c;n(3125),n(6678),n(2887),n(1578);const u=class{constructor(e=5){this.poolSize=e,this.workers=new Map,this.taskQueue=[],this.currentTasks=new Map}initWorker(){const e=new Worker("/workers/hashWorker.js"),t=crypto.randomUUID();return e.onmessage=n=>{if("complete"===n.data.status){const o=this.currentTasks.get(t);o&&(o.resolve({file:o.file,hash:n.data.hash,name:o.file.name}),this.currentTasks.delete(t)),this.processNextTask(t,e)}},e.onerror=n=>{const o=this.currentTasks.get(t);o&&(o.reject("Worker error: "+n.message),this.currentTasks.delete(t)),this.processNextTask(t,e)},this.workers.set(t,e),t}generateChecksum(e){return new Promise(((t,n)=>{const o={file:e,resolve:t,reject:n};if(this.taskQueue.push(o),this.taskQueue.length>this.workers.size&&this.workers.size<this.poolSize){const e=this.initWorker();this.processNextTask(e,this.workers.get(e))}else if(this.workers.size>0)for(const[e,t]of this.workers)if(!this.currentTasks.has(e)){this.processNextTask(e,t);break}}))}processNextTask(e,t){if(this.taskQueue.length>0){const n=this.taskQueue.shift();this.currentTasks.set(e,n),t.postMessage({file:n.file,msg:"begin hash"})}else 0===this.currentTasks.size&&this.cleanupWorkers()}cleanupWorkers(){for(const[e,t]of this.workers)t.terminate();this.workers.clear()}terminate(){this.cleanupWorkers(),this.taskQueue=[],this.currentTasks.clear()}};function p(e){const t=new Uint8Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=parseInt(e.substr(n,2),16);return t}function m(e,t,n){const o={MetaDatas:[{NodeUuid:e,Namespace:t,JsonValue:JSON.stringify(n),Policies:[{Action:"READ",Effect:"allow",Subject:"*"},{Action:"WRITE",Effect:"allow",Subject:"*"}]}],Operation:"PUT"};Curate.api.fetchCurate("/a/user-meta/update","PUT",o),console.log(`Attempted to update metadata '${t}' for UUID ${e}`)}function h(e,t,n){Curate.api.fetchCurate("/a/tree/stats","POST",{NodePaths:[e]}).then((o=>{const i=o.Nodes.find((t=>t.Path===e));i?function(e,t,n,o){const i=3,a=2e3;"temporary"===e.Etag&&o<i?(console.log(`Checksum temporary for ${n}. Retrying (${o+1}/${i})...`),setTimeout((()=>{h(n,t,o+1)}),a)):e.Etag===t?(console.log(`Checksum validation passed for ${n}.`),m(e.Uuid,"usermeta-file-integrity","✓ Integrity verified")):(console.error(`Checksum validation FAILED for ${n}.`,"Expected:",t,"Received:",e.Etag,`(Attempt ${o+1})`),m(e.Uuid,"usermeta-file-integrity","X Integrity compromised"))}(i,t,e,n):console.error("Node not found in stats response:",e)})).catch((t=>{console.error("Error fetching node stats:",t,e)}))}window.addEventListener("load",(()=>{(async()=>{for(;"undefined"==typeof UploaderModel||!UploaderModel.UploadItem;)await new Promise((e=>setTimeout(e,100)));const e=new u;console.log("WorkerManager initialized");const t=UploaderModel.UploadItem.prototype.uploadPresigned;UploaderModel.UploadItem.prototype.uploadPresigned=function(){const n=t.apply(this,arguments),o=PydioApi.getMultipartThreshold(),i=PydioApi.getMultipartPartSize(),a=async t=>{if("loaded"===t){if(this._observers&&this._observers.status){const e=this._observers.status.indexOf(a);e>-1&&this._observers.status.splice(e,1)}try{let t;if(this._file.size>o){console.log("File exceeds multipart threshold, generating part checksums for:",this._label);const n=i,o=Math.ceil(this._file.size/n),a=[],s=new Uint8Array(16*o);for(let t=0;t<o;t++){const o=t*n,i=Math.min(o+n,this._file.size),r=this._file.slice(o,i),l=await e.generateChecksum(r);a.push(l.hash);const d=p(l.hash);s.set(d,16*t)}const r=new Blob([s]),l=await e.generateChecksum(r);t=`${l.hash}-${o}`,console.log("Generated multipart checksum:",t,"Parts:",o)}else{console.log("File below multipart threshold, generating single checksum for:",this._label);const n=await e.generateChecksum(this._file);t=n.hash,console.log("Generated single checksum:",t)}const n=Curate.workspaces.getOpenWorkspace(),a=this._targetNode._path,s=this._file.webkitRelativePath,r=this._label,l=n.endsWith("/")?n:n+"/";let d="";a&&"/"!==a&&(d=a.replace(/^\/+|\/+$/g,""));let c="";if(s){const e=s.lastIndexOf("/");if(-1!==e){c=s.substring(0,e+1)+r}else c=r;c.startsWith("/")&&(c=c.substring(1))}else c=r;let u=l;d&&(u+=d+"/"),u+=c,u=u.replace(/\/+/g,"/"),console.log("Constructed final path for stats API:",u);const m=Math.min(5e3,Math.max(500,.01*this._file.size));setTimeout((()=>{h(u,t,0)}),m)}catch(e){console.error("Client-side checksum generation or path construction failed:",e)}}};return this._observers||(this._observers={}),this._observers.status||(this._observers.status=[]),this._observers.status.includes(a)||this._observers.status.push(a),n}})()}));n(7627),n(2937),n(7711),n(3663),n(1543),n(1380);class g extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.nodes=[],this.render()}setNodes(e){this.nodes=e,this.render()}render(){this.shadowRoot.innerHTML=`\n        <style>\n          .container {\n            border: 1px solid #ccc;\n            padding: 16px;\n            border-radius: 8px;\n            max-width: 600px;\n            width:30em;\n            margin: 0 auto;\n          }\n          .header {\n            font-size: 18px;\n            margin-bottom: 8px;\n            color: #333;\n          }\n          .message {\n            margin-bottom: 16px;\n            color: #555;\n          }\n          .file-list {\n            border: 1px solid #ddd;\n            padding: 8px;\n            border-radius: 4px;\n            max-height: 200px;\n            overflow-y: auto;\n          }\n          .file-item {\n            display: flex;\n            justify-content: space-between;\n            padding: 8px 0;\n            border-bottom: 1px solid #eee;\n          }\n          .file-item:last-child {\n            border-bottom: none;\n          }\n          .file-name {\n            flex-grow: 1;\n          }\n          .link-button {\n            padding: 4px 8px;\n            background: #007BFF;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n          }\n          .link-button:hover {\n            background: #0056b3;\n          }\n          .continue-btn {\n            display: block;\n            width: 100%;\n            padding: 12px;\n            font-size: 18px;\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            margin-top: 16px;\n            text-align: center;\n          }\n          .continue-btn:hover {\n            background-color: #45a049;\n          }\n        </style>\n        <div class="container">\n          <div class="message">\n            The selected preservation configuration has DIP generation enabled. The following items do not have a linked AtoM description, which will cause DIP generation to fail.\n          </div>\n          <div class="file-list">\n            ${this.nodes.map((e=>`\n              <div class="file-item">\n                <span class="file-name">${e._path}</span>\n                <button class="link-button" data-path="${e._path}">Add Description</button>\n              </div>\n            `)).join("")}\n          </div>\n        </div>\n      `,this.shadowRoot.querySelectorAll(".link-button").forEach((e=>{e.addEventListener("click",(()=>{console.log(`Add description for ${e.getAttribute("data-path")}`),Curate.ui.modals.curatePopup({title:"Connect Selected Node to an AtoM Description"},{afterLoaded:t=>{const n=document.createElement("atom-search-interface");n.setNode(this.nodes.find((t=>t._path==e.getAttribute("data-path")))),t.querySelector(".config-main-options-container").appendChild(n),n.addEventListener("description-linked",(n=>{console.log("description linked"),t.remove();const o=document.createElement("div");o.innerHTML="<div class='linked-item'><span class='linked-item-name'>🔗</span></div>",e.parentElement.querySelector(".file-name").after(o),e.remove()}))},afterClosed:()=>{}}).fire()}))}))}}customElements.define("dip-slug-resolver",g);n(6738),n(7523);var f=n(5257),y=n(1609),v=n(302),b=n(1601);n(931),n(2910),n(4778),n(5805),n(3559),n(4379),n(67),n(3313),n(139),n(2059),n(621),n(9338),n(3367),n(8235),n(2696),n(8508),n(7266),n(9671),n(265),n(722),n(8173);const x=[{id:"REC/001/A",title:"Minutes of the Brighton Ratepayers Association",collection:"Civic Records",modified:"2025-04-15",selected:!1},{id:"DOC/452",title:"Correspondence regarding the construction of the West Pier",collection:"Historical Documents",modified:"2025-05-02",selected:!1},{id:"PHO/199/B",title:"Photograph Album: The Great Storm of 1987",collection:"Media Collection",modified:"2024-11-20",selected:!1},{id:"REC/009/F",title:"Architectural plans for the Royal Pavilion estate",collection:"Civic Records",modified:"2023-01-10",selected:!1},{id:"MED/034",title:"Audio Interview: A Brighton Fisherman's memoirs",collection:"Media Collection",modified:"2025-02-28",selected:!1},{id:"MAP/076",title:"Survey Map of Sussex County Railways, 1902",collection:"Special Collections",modified:"2024-08-01",selected:!1}];class w extends f.WF{static get properties(){return{activeTab:{type:Number,state:!0},queryFilters:{type:Array,state:!0},isEnabled:{type:Boolean,state:!0},showVariablesDialog:{type:Boolean,state:!0},manualHarvestMode:{type:String,state:!0},manualHarvestIds:{type:String,state:!0},manualSearchTerm:{type:String,state:!0},isManualSearching:{type:Boolean,state:!0},manualSearchResults:{type:Array,state:!0},isManualHarvesting:{type:Boolean,state:!0},recentHarvests:{type:Array,state:!0},showSuccessDialog:{type:Boolean,state:!0},successDialogMessage:{type:String,state:!0}}}constructor(){super(),this.activeTab=0,this.queryFilters=[{field:"modified_date",condition:"since",value:"LAST_HARVEST"}],this.isEnabled=!0,this.showVariablesDialog=!1,this.manualHarvestMode="ids",this.manualHarvestIds="",this.manualSearchTerm="",this.isManualSearching=!1,this.manualSearchResults=[],this.isManualHarvesting=!1,this.showSuccessDialog=!1,this.successDialogMessage="",this.recentHarvests=[{id:1,date:"2025-05-22 02:00",status:"completed",records:1247,duration:"12m 34s",success:!0},{id:2,date:"2025-05-21 02:00",status:"completed",records:1189,duration:"11m 48s",success:!0},{id:3,date:"2025-05-20 02:00",status:"failed",records:0,duration:"2m 15s",success:!1,error:"Connection timeout"}],this.chart=null}get selectedManualRecords(){return this.manualSearchResults.filter((e=>e.selected))}disconnectedCallback(){super.disconnectedCallback(),this.chart&&this.chart.destroy()}updated(e){e.has("activeTab")&&(3===this.activeTab?this.initChart():this.chart&&(this.chart.destroy(),this.chart=null))}initChart(){requestAnimationFrame((()=>{const e=this.shadowRoot.querySelector("#analyticsChart");if(!e||this.chart)return;const t=e.getContext("2d"),n=this.recentHarvests.map((e=>e.date.split(" ")[0])).reverse(),o=this.recentHarvests.map((e=>e.records)).reverse();this.chart=new b.A(t,{type:"line",data:{labels:n,datasets:[{label:"Records Harvested",data:o,fill:!0,borderColor:"#1976d2",backgroundColor:"rgba(25, 118, 210, 0.1)",tension:.4}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0}}}})}))}static get styles(){return f.AH`
      :host {
        display: block;
        background: #f5f5f5;
        min-height: 100vh;
        color: rgba(0, 0, 0, 0.87);
      }
      .header {
        background: var(--md-sys-color-primary-container);
        color: var(--md-sys-color-on-primary-container);
        padding: 24px 24px 80px;
        position: relative;
        overflow: hidden;
      }
      .header-content {
        position: relative;
        max-width: 1200px;
        margin: 0 auto;
      }
      .header h1 {
        margin: 0 0 8px;
        font-size: 32px;
        font-weight: 300;
      }
      .header p {
        margin: 0;
        opacity: 0.9;
        font-size: 16px;
      }
      .container {
        max-width: 1200px;
        margin: -60px auto 0;
        padding: 0 24px 24px;
        position: relative;
      }
      .card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 24px;
      }
      md-tabs {
        --md-primary-tab-container-color: white;
      }
      .tab-content {
        padding: 24px;
        min-height: 400px;
      }
      .form-section {
        margin-bottom: 32px;
      }
      .form-section h3 {
        margin: 0 0 8px;
        font-size: 18px;
        font-weight: 500;
        color: var(--md-sys-color-primary);
        display: flex;
        align-items: center;
        gap: 8px;
      }
      .form-section p {
        margin: 0 0 16px;
        color: rgba(0, 0, 0, 0.6);
      }
      .harvest-list {
        display: flex;
        flex-direction: column;
        gap: 12px;
      }
      .harvest-item {
        background: #f5f5f5;
        border-radius: 12px;
        padding: 16px;
        display: grid;
        grid-template-columns: auto 1fr auto;
        gap: 16px;
        align-items: center;
      }
      .harvest-status {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .harvest-status.completed {
        background: #e8f5e9;
        color: #2e7d32;
      }
      .harvest-status.failed {
        background: var(--md-sys-color-error-container);
        color: var(--md-sys-color-on-error-container);
      }
      .harvest-details h4 {
        margin: 0 0 4px;
        font-size: 16px;
      }
      .harvest-meta {
        display: flex;
        gap: 16px;
        font-size: 14px;
        color: rgba(0, 0, 0, 0.6);
      }
      .button-group {
        display: flex;
        gap: 12px;
        margin-top: 24px;
        justify-content: flex-end;
      }
      md-dialog {
        --md-dialog-container-color: white;
      }
      .query-builder-group {
        background: #f5f5f5;
        border-radius: 8px;
        padding: 16px;
        border-left: 3px solid var(--md-sys-color-primary);
      }
      .filter-row {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr auto;
        gap: 12px;
        align-items: center;
        margin-bottom: 12px;
      }
      .mode-toggle-group {
        display: flex;
        gap: 8px;
        margin-bottom: 24px;
      }
      .search-results-container {
        margin-top: 24px;
        border-top: 1px solid #eee;
        padding-top: 24px;
      }
      .search-results-list {
        max-height: 400px;
        overflow-y: auto;
        border: 1px solid #ddd;
        border-radius: 8px;
      }
      .search-result-item {
        --md-list-item-leading-space: 12px;
      }
      .search-result-item md-checkbox {
        margin-right: 8px;
      }
      .chart-container {
        position: relative;
        height: 350px;
        background: #fafafa;
        border-radius: 8px;
        padding: 16px;
      }
      .variables-dialog-content {
        display: flex;
        flex-direction: column;
        gap: 16px;
      }
      .variables-dialog-content dt {
        font-weight: 500;
        color: #1e88e5;
      }
      .variables-dialog-content dd {
        margin-left: 16px;
        font-size: 14px;
        color: rgba(0, 0, 0, 0.7);
      }
    `}render(){return f.qy`
      <div class="header">
        <div class="header-content">
          <h1>Harvest Scheduler</h1>
          <p>Configure and monitor your CALM to Curate harvest operations</p>
        </div>
      </div>
      <div class="container">
        <div class="card">
          <md-tabs
            @change=${this.handleTabChange}
            .activeTabIndex=${this.activeTab}
          >
            <md-primary-tab
              ><md-icon slot="icon">tune</md-icon>Configuration</md-primary-tab
            >
            <md-primary-tab
              ><md-icon slot="icon">play_for_work</md-icon>Manual
              Harvest</md-primary-tab
            >
            <md-primary-tab
              ><md-icon slot="icon">history</md-icon>History</md-primary-tab
            >
            <md-primary-tab
              ><md-icon slot="icon">insights</md-icon>Analytics</md-primary-tab
            >
          </md-tabs>
          <div class="tab-content">
            ${(0,v.z)(0===this.activeTab,(()=>this.renderConfiguration()))}
            ${(0,v.z)(1===this.activeTab,(()=>this.renderManualHarvest()))}
            ${(0,v.z)(2===this.activeTab,(()=>this.renderHistory()))}
            ${(0,v.z)(3===this.activeTab,(()=>this.renderAnalytics()))}
          </div>
        </div>
      </div>

      <md-dialog
        ?open=${this.showSuccessDialog}
        @closed=${()=>this.showSuccessDialog=!1}
      >
        <div slot="headline">Success</div>
        <div slot="content">${this.successDialogMessage}</div>
        <div slot="actions">
          <md-text-button @click=${()=>this.showSuccessDialog=!1}
            >Close</md-text-button
          >
        </div>
      </md-dialog>

      <md-dialog
        ?open=${this.showVariablesDialog}
        @closed=${()=>this.showVariablesDialog=!1}
      >
        <div slot="headline">Dynamic Date Variables</div>
        <div slot="content" class="variables-dialog-content">
          <p>
            You can use the following dynamic variables in the 'Value' field for
            any date-based criteria.
          </p>
          <dl>
            <dt>LAST_HARVEST</dt>
            <dd>The date and time of the last successful automated run.</dd>
            <dt>TODAY</dt>
            <dd>The start of the current day (00:00:00).</dd>
            <dt>YESTERDAY</dt>
            <dd>The start of the previous day.</dd>
            <dt>START_OF_MONTH</dt>
            <dd>The first day of the current month.</dd>
          </dl>
        </div>
        <div slot="actions">
          <md-text-button @click=${()=>this.showVariablesDialog=!1}
            >Got it</md-text-button
          >
        </div>
      </md-dialog>
    `}renderConfiguration(){return f.qy`
      <div class="form-section">
        <h3>
          Automated Harvest Criteria
          <md-icon-button
            @click=${()=>this.showVariablesDialog=!0}
            title="View available variables"
          >
            <md-icon>help_outline</md-icon>
          </md-icon-button>
        </h3>
        <p>
          Define the rules for the recurring, automated harvest of records from
          CALM.
        </p>
        <div class="query-builder-group">
          ${(0,y.u)(this.queryFilters,((e,t)=>t),((e,t)=>f.qy`
              <div class="filter-row">
                <md-outlined-select
                  label="Field"
                  .value=${e.field}
                  @change=${e=>this.updateFilter(e,t,"field")}
                >
                  <md-select-option value="modified_date" selected
                    ><div slot="headline">Modified Date</div></md-select-option
                  >
                  <md-select-option value="created_date"
                    ><div slot="headline">Created Date</div></md-select-option
                  >
                  <md-select-option value="title"
                    ><div slot="headline">Title</div></md-select-option
                  >
                </md-outlined-select>
                <md-outlined-select
                  label="Condition"
                  .value=${e.condition}
                  @change=${e=>this.updateFilter(e,t,"condition")}
                >
                  <md-select-option value="since" selected
                    ><div slot="headline">Is After</div></md-select-option
                  >
                  <md-select-option value="contains"
                    ><div slot="headline">Contains</div></md-select-option
                  >
                </md-outlined-select>
                <md-outlined-text-field
                  label="Value"
                  .value=${e.value}
                  @input=${e=>this.updateFilter(e,t,"value")}
                ></md-outlined-text-field>
                <md-icon-button
                  @click=${()=>this.removeFilter(t)}
                  title="Remove filter"
                  ><md-icon>delete</md-icon></md-icon-button
                >
              </div>
            `))}
          <md-text-button @click=${this.addFilter}
            ><md-icon slot="icon">add</md-icon> Add Criteria</md-text-button
          >
        </div>
      </div>
      <div class="form-section">
        <h3><md-icon>power_settings_new</md-icon>Automated Harvest Status</h3>
        <div
          style="display: flex; align-items: center; gap: 12px; padding: 8px 0;"
        >
          <md-switch
            ?selected=${this.isEnabled}
            @change=${e=>this.isEnabled=e.target.selected}
          ></md-switch>
          <span
            >Automated harvesting is currently
            <strong>${this.isEnabled?"enabled":"disabled"}</strong>.</span
          >
        </div>
      </div>
      <div class="button-group">
        <md-outlined-button @click=${this.resetForm}
          ><md-icon slot="icon">restart_alt</md-icon>Reset</md-outlined-button
        >
        <md-filled-button @click=${this.saveConfiguration}
          ><md-icon slot="icon">save</md-icon>Save
          Configuration</md-filled-button
        >
      </div>
    `}renderManualHarvest(){return f.qy`
      <div class="mode-toggle-group">
        <md-filled-tonal-button
          @click=${()=>this.manualHarvestMode="ids"}
          ?disabled=${"ids"===this.manualHarvestMode}
        >
          <md-icon slot="icon">short_text</md-icon> Enter IDs Directly
        </md-filled-tonal-button>
        <md-filled-tonal-button
          @click=${()=>this.manualHarvestMode="search"}
          ?disabled=${"search"===this.manualHarvestMode}
        >
          <md-icon slot="icon">search</md-icon> Search & Select
        </md-filled-tonal-button>
      </div>
      ${(0,v.z)("ids"===this.manualHarvestMode,(()=>this.renderManualHarvestByIds()),(()=>this.renderManualHarvestBySearch()))}
    `}renderManualHarvestByIds(){return f.qy`
      <div class="form-section">
        <h3><md-icon>short_text</md-icon>Harvest by Identifier</h3>
        <p>
          Fetch specific records by pasting their unique CALM identifiers below,
          one per line.
        </p>
        <md-outlined-text-field
          type="textarea"
          rows="5"
          label="Record Identifiers"
          .value=${this.manualHarvestIds}
          @input=${e=>this.manualHarvestIds=e.target.value}
          style="width: 100%;"
        ></md-outlined-text-field>
      </div>
      <div class="button-group">
        <md-filled-button
          @click=${this.runHarvestForEnteredIds}
          ?disabled=${!this.manualHarvestIds.trim()||this.isManualHarvesting}
        >
          <md-icon slot="icon">play_arrow</md-icon> ${this.isManualHarvesting?"Harvesting...":"Start Harvest"}
        </md-filled-button>
      </div>
    `}renderManualHarvestBySearch(){const e=this.selectedManualRecords.length;return f.qy`
      <div class="form-section">
        <h3><md-icon>search</md-icon>Find and Select Records</h3>
        <p>
          Search for records using a keyword and then select the ones you wish
          to harvest.
        </p>
        <div style="display: flex; gap: 8px; align-items: center;">
          <md-outlined-text-field
            label="Search by keyword, title, or ID"
            .value=${this.manualSearchTerm}
            @input=${e=>this.manualSearchTerm=e.target.value}
            style="flex-grow: 1;"
          ></md-outlined-text-field>
          <md-filled-button
            @click=${this.runManualSearch}
            ?disabled=${!this.manualSearchTerm.trim()||this.isManualSearching}
          >
            <md-icon slot="icon">search</md-icon> ${this.isManualSearching?"Searching...":"Search"}
          </md-filled-button>
        </div>
      </div>
      ${(0,v.z)(this.isManualSearching,(()=>f.qy`<md-linear-progress indeterminate></md-linear-progress>`))}
      ${(0,v.z)(this.manualSearchResults.length>0&&!this.isManualSearching,(()=>f.qy`
          <div class="search-results-container">
            <h4>Search Results</h4>
            <div class="search-results-list">
              <md-list>
                ${(0,y.u)(this.manualSearchResults,(e=>e.id),((e,t)=>f.qy`
                    <md-list-item
                      class="search-result-item"
                      type="button"
                      @click=${()=>this.toggleRecordSelection(t)}
                    >
                      <md-checkbox
                        slot="start"
                        ?checked=${e.selected}
                      ></md-checkbox>
                      <div slot="headline">${e.title}</div>
                      <div slot="supporting-text">
                        ID: ${e.id} | Modified: ${e.modified}
                      </div>
                    </md-list-item>
                  `))}
              </md-list>
            </div>
            <div class="button-group">
              <md-filled-button
                @click=${this.runHarvestForSelectedRecords}
                ?disabled=${0===e||this.isManualHarvesting}
              >
                <md-icon slot="icon">play_arrow</md-icon>
                ${this.isManualHarvesting?"Harvesting...":`Harvest ${e} Selected Record${1===e?"":"s"}`}
              </md-filled-button>
            </div>
          </div>
        `))}
    `}renderHistory(){return f.qy`
      <h3 style="margin: 0 0 16px; font-size: 18px;">Recent Harvests</h3>
      <div class="harvest-list">
        ${(0,y.u)(this.recentHarvests,(e=>e.id),(e=>f.qy`
            <div class="harvest-item">
              <div class="harvest-status ${e.status}">
                <md-icon
                  >${e.success?"check":"error_outline"}</md-icon
                >
              </div>
              <div class="harvest-details">
                <h4>${e.date}</h4>
                <div class="harvest-meta">
                  <span
                    >${e.success?`${e.records} records`:`Error: ${e.error}`}</span
                  >
                  <span>Duration: ${e.duration}</span>
                </div>
              </div>
              <md-icon-button><md-icon>chevron_right</md-icon></md-icon-button>
            </div>
          `))}
      </div>
    `}renderAnalytics(){return f.qy`
      <h3 style="margin: 0 0 16px; font-size: 18px;">Harvest Trends</h3>
      <div class="chart-container"><canvas id="analyticsChart"></canvas></div>
    `}handleTabChange(e){this.activeTab=e.target.activeTabIndex}addFilter(){this.queryFilters=[...this.queryFilters,{field:"title",condition:"contains",value:""}]}removeFilter(e){this.queryFilters=this.queryFilters.filter(((t,n)=>n!==e))}updateFilter(e,t,n){const o=e.target.value;this.queryFilters=this.queryFilters.map(((e,i)=>i===t?{...e,[n]:o}:e))}async runManualSearch(){this.isManualSearching=!0,this.manualSearchResults=[],await new Promise((e=>setTimeout(e,1e3)));const e=this.manualSearchTerm.toLowerCase();this.manualSearchResults=x.filter((t=>t.title.toLowerCase().includes(e)||t.id.toLowerCase().includes(e))),this.isManualSearching=!1}toggleRecordSelection(e){this.manualSearchResults=this.manualSearchResults.map(((t,n)=>n===e?{...t,selected:!t.selected}:t))}async runHarvest(e,t){this.isManualHarvesting=!0,await new Promise((e=>setTimeout(e,2e3)));const n={id:Date.now(),date:(new Date).toLocaleString(),status:"completed",records:e.length,duration:`${Math.floor(30*Math.random())+5}s`,success:!0};this.recentHarvests=[n,...this.recentHarvests],this.successDialogMessage=`Successfully harvested ${e.length} record(s) from your ${t}.`,this.showSuccessDialog=!0,this.isManualHarvesting=!1,this.activeTab=2}runHarvestForEnteredIds(){const e=this.manualHarvestIds.split("\n").filter((e=>e.trim()));e.length>0&&(this.runHarvest(e,"manual input"),this.manualHarvestIds="")}runHarvestForSelectedRecords(){const e=this.selectedManualRecords.map((e=>e.id));e.length>0&&(this.runHarvest(e,"search selection"),this.manualSearchResults=[],this.manualSearchTerm="")}saveConfiguration(){this.successDialogMessage="Your automated harvest configuration has been saved.",this.showSuccessDialog=!0}resetForm(){this.queryFilters=[{field:"modified_date",condition:"since",value:"LAST_HARVEST"}],this.isEnabled=!0}}customElements.define("calm-harvest-interface",w);n(9093),n(5092)},1380:()=>{class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.apiKey="",this.atomUrl="",this.username="",this.password="",this.retrieveDetails(),this.render()}async retrieveDetails(){try{const e=await Curate.api.fetchCurate("/api/atom","GET");this.apiKey=e.atom_api_key,this.atomUrl=e.atom_url,this.username=e.atom_username,this.password=e.atom_password,this.render()}catch(e){console.error("Error retrieving details from Atom:",e)}}saveDetails(e){e.preventDefault(),Curate.api.fetchCurate("/api/atom","POST",{atom_api_key:this.apiKey,atom_url:this.atomUrl,atom_username:this.username,atom_password:this.password}).then((e=>{console.log("Saved Atom details:",e)})).catch((e=>{console.error("Error saving Atom details:",e)})),""!==this.apiKey&&(localStorage.setItem("atom_api_key",this.apiKey),console.log("Saving API Key:",this.apiKey)),""!==this.atomUrl&&(localStorage.setItem("atom_url",this.atomUrl),console.log("Saving Atom URL:",this.atomUrl)),""!==this.username&&(localStorage.setItem("atom_username",this.username),console.log("Saving Atom Username:",this.username)),""!==this.password&&(localStorage.setItem("atom_password",this.password),console.log("Saving Atom Password:",this.password)),this.render()}handleApiKeyChange(e){this.apiKey=e.target.value}handleUrlChange(e){this.atomUrl=e.target.value}handleUsernameChange(e){this.username=e.target.value}handlePasswordChange(e){this.password=e.target.value}togglePasswordVisibility(){const e=this.shadowRoot.querySelector("#password"),t=this.shadowRoot.querySelector("#toggle-password");"password"===e.type?(e.type="text",t.textContent="Hide"):(e.type="password",t.textContent="Show")}render(){this.shadowRoot.innerHTML=`\n      <style>\n       .container {\n          max-width: 500px;\n          min-width: 30em;\n        }\n        .heading {\n          text-align: center;\n          margin-bottom: 20px;\n          font-size: 24px;\n          font-weight: 500;\n          color: #333;\n        }\n        .form-group {\n          margin-bottom: 20px;\n          position: relative;\n        }\n        .label {\n          display: block;\n          margin-bottom: 5px;\n          font-size: 16px;\n          color: #666;\n        }\n        .input {\n          width: 100%;\n          padding: 12px;\n          font-size: 16px;\n          border-radius: 4px;\n          border: 1px solid #ddd;\n          box-sizing: border-box;\n          transition: border-color 0.2s;\n        }\n        .input:focus {\n          border-color: #d15400;\n          outline: none;\n        }\n        .toggle-password {\n          position: absolute;\n          top: 70%;\n          right: 10px;\n          transform: translateY(-50%);\n          background: #e9e9e9;\n          border: none;\n          border-radius:0.2em;\n          padding: 0.4em;\n          font-size: 16px;\n          cursor: pointer;\n        }\n        .save-btn {\n          display: block;\n          width: 100%;\n          padding: 12px;\n          font-size: 18px;\n          background-color: #ff6600;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n        .save-btn:hover {\n          background-color: #d15400;\n        }\n        .details-display {\n          margin-top: 20px;\n          margin-bottom: 20px;\n          padding: 20px;\n          background-color: #f5f5f5;\n          border-radius: 8px;\n          border-left: 4px solid #ff6600;\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n        .detail-item {\n          display: flex;\n          justify-content: space-between;\n          font-size: 16px;\n          color: #333;\n        }\n        .detail-item .label {\n          font-weight: 500;\n        }\n        .detail-item .value {\n          color: #666;\n        }\n      </style>\n      <div class="container">\n        <div class="details-display">\n          <div class="detail-item">\n            <span class="label">Current API Key:</span>\n            <span class="value" id="current-api-key">${"*".repeat(this.apiKey?.length)||"Not Set"}</span>\n          </div>\n          <div class="detail-item">\n            <span class="label">Current Atom URL:</span>\n            <span class="value" id="current-atom-url">${this.atomUrl||"Not Set"}</span>\n          </div>\n          <div class="detail-item">\n            <span class="label">Current Username:</span>\n            <span class="value" id="current-username">${this.username||"Not Set"}</span>\n          </div>\n          <div class="detail-item">\n            <span class="label">Current Password:</span>\n            <span class="value" id="current-password">${"*".repeat(this.password?.length)||"Not Set"}</span>\n          </div>\n        </div>\n        <form id="details-form">\n          <div class="form-group">\n            <label class="label" for="api-key">Enter an API Key:</label>\n            <input class="input" type="text" id="api-key" name="api-key" placeholder="Enter a New API key">\n          </div>\n          <div class="form-group">\n            <label class="label" for="atom-url">Enter Atom Site URL:</label>\n            <input class="input" type="url" id="atom-url" name="atom-url" placeholder="https://atom.penwern.co.uk/">\n          </div>\n          <div class="form-group">\n            <label class="label" autocomplete="new-username" for="username">Enter Username:</label>\n            <input class="input" type="text" id="username" name="username" placeholder="Enter Username">\n          </div>\n          <div class="form-group">\n            <label class="label" for="password">Enter Password:</label>\n            <input class="input" type="password" autocomplete="new-password" id="password" name="password" placeholder="Enter Password">\n            <button type="button" class="toggle-password" id="toggle-password">Show</button>\n          </div>\n          <button class="save-btn" type="submit">Save</button>\n        </form>\n      </div>\n    `,this.shadowRoot.querySelector("#details-form").addEventListener("submit",(e=>this.saveDetails(e))),this.shadowRoot.querySelector("#api-key").addEventListener("input",(e=>this.handleApiKeyChange(e))),this.shadowRoot.querySelector("#atom-url").addEventListener("input",(e=>this.handleUrlChange(e))),this.shadowRoot.querySelector("#username").addEventListener("input",(e=>this.handleUsernameChange(e))),this.shadowRoot.querySelector("#password").addEventListener("input",(e=>this.handlePasswordChange(e))),this.shadowRoot.querySelector("#toggle-password").addEventListener("click",(()=>this.togglePasswordVisibility()))}}customElements.define("connect-to-atom",e)},1543:()=>{class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.atomUrl=null,this.criteria=[{id:0,query:"",field:"",operator:""}],this.results=[],this.criterionIndex=1,this.node=null,this.error=null,this.isLoading=!1,this.currentPage=1,this.totalResults=0,this.resultsPerPage=10,this.initialise(),this.render()}async initialise(){this.atomUrl=await this.getAtomUrl()}setNode(e){this.node=e,this.render()}addCriterion(){this.criteria.push({id:this.criterionIndex,query:"",field:"",operator:"and"}),this.criterionIndex++,this.render()}removeCriterion(e){this.criteria=this.criteria.filter((t=>t.id!==e)),this.render()}handleInputChange(e,t,n){this.criteria=this.criteria.map((o=>o.id===e?{...o,[t]:n}:o));const o=this.shadowRoot.querySelector(`[data-id="${e}"][data-field="${t}"]`);o&&(o.value=n)}async performSearch(e=1){this.isLoading=!0,this.error=null,this.currentPage=e,this.render();const t=new URLSearchParams;this.criteria.forEach(((e,n)=>{n>0&&t.append(`so${n}`,e.operator),t.append(`sq${n}`,e.query),t.append(`sf${n}`,e.field)})),t.append("topLod",0),t.append("skip",(e-1)*this.resultsPerPage);try{const e=`${window.location.protocol}//${window.location.hostname}/api/atom/search`,n=await PydioApi._PydioRestClient.getOrUpdateJwt(),o=await fetch(`${e}?${t.toString()}`,{headers:{Authorization:`Bearer ${n}`}});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const i=await o.json();console.log("Retrieved results:",i),this.results=i.results,this.totalResults=i.total}catch(e){console.error("Error performing search:",e),this.error=`An error occurred while searching: ${e.message}`}finally{this.isLoading=!1,this.render()}}handleResultClick(e){console.log("Result clicked:",e);var t=[];if(!this.node)throw new Error("No node set");console.log("node to link to:",this.node),t.push({NodeUuid:this.node._metadata.get("uuid"),JsonValue:JSON.stringify(e),Namespace:"usermeta-atom-linked-description",Policies:[{Action:"READ",Effect:"allow",Subject:"*"},{Action:"WRITE",Effect:"allow",Subject:"*"}]}),Curate.api.fetchCurate("/a/user-meta/update","PUT",{MetaDatas:t,Operation:"PUT"}),this.dispatchEvent(new CustomEvent("description-linked",{detail:e})),this.remove()}toggleAccordion(e){e.classList.toggle("collapsed");const t=e.nextElementSibling,n=e.querySelector(".chevron");t.classList.contains("show")?(t.classList.remove("show"),n.classList.remove("down"),localStorage.setItem("accordionState","true")):(t.classList.add("show"),n.classList.add("down"),localStorage.setItem("accordionState","false"))}renderPagination(){const e=Math.ceil(this.totalResults/this.resultsPerPage);let t="";if(e>1){t+='<div class="pagination-container">',t+='<div class="pagination-info">Showing results '+((this.currentPage-1)*this.resultsPerPage+1)+" - "+Math.min(this.currentPage*this.resultsPerPage,this.totalResults)+" of "+this.totalResults+"</div>",t+='<div class="pagination">',t+=`\n        <button class="pagination-button first-page" \n          ${1===this.currentPage?"disabled":""} \n          onclick="this.getRootNode().host.performSearch(1)"\n          title="First Page">\n          &laquo;\n        </button>\n      `,t+=`\n        <button class="pagination-button prev-page" \n          ${1===this.currentPage?"disabled":""} \n          onclick="this.getRootNode().host.performSearch(${this.currentPage-1})"\n          title="Previous Page">\n          &lsaquo;\n        </button>\n      `;this.getPageRange(this.currentPage,e).forEach((e=>{t+=null===e?'<span class="pagination-ellipsis" title="More pages">...</span>':`\n            <button class="pagination-button ${e===this.currentPage?"active":""}" \n              onclick="this.getRootNode().host.performSearch(${e})"\n              title="Page ${e}">\n              ${e}\n            </button>\n          `})),t+=`\n        <button class="pagination-button next-page" \n          ${this.currentPage===e?"disabled":""} \n          onclick="this.getRootNode().host.performSearch(${this.currentPage+1})"\n          title="Next Page">\n          &rsaquo;\n        </button>\n      `,t+=`\n        <button class="pagination-button last-page" \n          ${this.currentPage===e?"disabled":""} \n          onclick="this.getRootNode().host.performSearch(${e})"\n          title="Last Page">\n          &raquo;\n        </button>\n      `,t+="</div>",t+="</div>"}return t}getPageRange(e,t){let n=[];const o=e-2,i=e+2+1;for(let e=1;e<=t;e++)(1===e||e===t||e>=o&&e<i)&&n.push(e);return n=n.filter(((e,o,i)=>1===e||e===t||(!i[o-1]||i[o-1]+1===e||(n.splice(o,0,null),!0)))),n}async getAtomUrl(){return Curate.api.fetchCurate(":6900/atom","GET").then((e=>e.atom_url))}render(){this.shadowRoot.innerHTML=`\n      <style>\n        .container {\n          margin: 20px auto;\n          padding: 20px;\n          border-radius: 8px;\n        }\n        .header {\n          font-size: 24px;\n          color: #333333;\n          margin-bottom: 20px;\n        }\n        .chevron {\n          transition: transform 0.3s ease;\n          margin-left: auto;\n          transform: rotate(90deg);\n        }\n        .chevron.down {\n            transform: rotate(-90deg);\n        }\n        .criterion {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n          margin-bottom: 10px;\n        }\n        .input {\n          flex: 1;\n          padding: 10px;\n          border: 1px solid #e0e0e0;\n          border-radius: 4px;\n        }\n        .select {\n          padding: 10px;\n          border: 1px solid #e0e0e0;\n          border-radius: 4px;\n        }\n        .button {\n          margin: 5px;\n          padding: 10px 20px;\n          border: none;\n          border-radius: 4px;\n          background-color: #007bff;\n          color: #ffffff;\n          cursor: pointer;\n        }\n        .remove-button {\n          margin: 5px;\n          padding: 10px 20px;\n          border: none;\n          border-radius: 4px;\n          background-color: #dc3545;\n          color: #ffffff;\n          cursor: pointer;\n        }\n        .results {\n          margin-top: 20px;\n        }\n        .result-item {\n          padding: 1em;\n          border: 1px solid #e0e0e0;\n          border-radius: 4px;\n          background-color: #f9f9f9;\n          margin-bottom: 10px;\n          display: flex;\n          justify-content: space-between;\n        }\n        .glass {\n          background: rgba(255, 255, 255, 0.2);\n          box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n          backdrop-filter: blur(10px);\n          -webkit-backdrop-filter: blur(10px);\n          border: 1px solid rgba(255, 255, 255, 0.3);\n          border-radius: 15px;\n          padding: 20px;\n          color: #333;\n          min-width: 60vw;\n          margin-bottom: 2em;\n          text-align: left;\n          max-height: 35em;\n          overflow-y: scroll;\n        }\n        .info {\n            margin-bottom: 2em;\n        }\n        .accordion {\n          margin: 10px 0;\n        }\n        .accordion-header {\n          cursor: pointer;\n          padding: 10px;\n          background-color: #f8f9fa;\n          border: 1px solid #ddd;\n          border-radius: 5px;\n          display: flex;\n          align-items: center;\n        }\n        .accordion-body {\n          padding: 10px;\n          border: 1px solid #ddd;\n          border-top: none;\n          display: none;\n        }\n        .accordion-body.show {\n          display: block;\n        }\n        .accordion-header i {\n          margin-right: 10px;\n        }\n        .error-message {\n          background-color: #ffebee;\n          color: #c62828;\n          padding: 10px;\n          border-radius: 4px;\n          margin-bottom: 10px;\n        }\n\n        .loading {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 50px;\n        }\n\n        .loading::after {\n          content: "";\n          width: 30px;\n          height: 30px;\n          border: 5px solid #f3f3f3;\n          border-top: 5px solid #3498db;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n        .pagination-container {\n          margin-top: 2em;\n          font-family: Arial, sans-serif;\n        }\n\n        .pagination-info {\n          text-align: center;\n          margin-bottom: 1em;\n          font-size: 0.9em;\n          color: #666;\n        }\n\n        .pagination {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          flex-wrap: wrap;\n          gap: 0.5em;\n        }\n\n        .pagination-button {\n          min-width: 36px;\n          height: 36px;\n          padding: 0 0.5em;\n          border: 1px solid #d1d5db;\n          background-color: #ffffff;\n          color: #374151;\n          font-size: 0.875rem;\n          font-weight: 500;\n          text-align: center;\n          cursor: pointer;\n          user-select: none;\n          border-radius: 0.375rem;\n          transition: all 0.2s ease-in-out;\n        }\n\n        .pagination-button:hover:not(:disabled) {\n          background-color: #f3f4f6;\n          border-color: #9ca3af;\n        }\n\n        .pagination-button:focus {\n          outline: 2px solid #3b82f6;\n          outline-offset: 2px;\n        }\n\n        .pagination-button.active {\n          background-color: #3b82f6;\n          border-color: #3b82f6;\n          color: #ffffff;\n        }\n\n        .pagination-button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .pagination-ellipsis {\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          min-width: 36px;\n          height: 36px;\n          font-size: 0.875rem;\n          color: #6b7280;\n        }\n\n        .first-page, .last-page {\n          font-size: 0.75rem;\n        }\n\n        .prev-page, .next-page {\n          font-size: 1.25rem;\n        }\n\n        @media (max-width: 640px) {\n          .pagination-button {\n            min-width: 32px;\n            height: 32px;\n            font-size: 0.75rem;\n          }\n\n          .pagination-ellipsis {\n            min-width: 32px;\n            height: 32px;\n            font-size: 0.75rem;\n          }\n        }\n        .result-image {\n          width: 10em;\n          height: 10em;\n          border-radius: 4px;\n          margin: auto;\n          margin-right: 0;\n          right: 2em;\n          position: relative;\n        }\n      </style>\n      <div class="accordion">\n        <div class="accordion-header collapsed" onclick="this.getRootNode().host.toggleAccordion(this)">  \n          Warning: Click to view essential information\n          <div class="chevron" style="width: 24px; height: 24px; display: inline-block; vertical-align: middle;">\n              <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" viewBox="0 0 24 24" fill="none">\n                  <path d="M9 6L15 12L9 18" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n              </svg>\n          </div>\n        </div>\n        <div class="accordion-body ${"true"===localStorage.getItem("accordionState")?"":"show"}">\n          <div class="info">\n            <p>This interface allows you to search for descriptions in your AtoM instance using a set of search criteria.</p>\n            <p>You can add as many search criteria as you like, and then perform a search to find descriptions that match your criteria.</p>\n            <p>Once you have found a description, you can link it to your selected node in Curate.</p>\n            <p>Please note: only the top-level linked description will be considered when associating your dissemination package with AtoM.</p>\n            <p>For example, if you create an AIP from a folder containing multiple files, only the folder itself will be checked for a linked description.</p>\n            <p>AtoM automatically links the sub-files or folders as child level descendants of the top-level linked description.</p>\n          </div>\n        </div>\n      </div>\n        <div class="glass">\n          <div id="criteriaContainer">\n            ${this.criteria.map(((e,t)=>`\n              <div class="criterion">\n                ${t>0?`\n                  <select class="select" value="${e.operator}" onchange="this.getRootNode().host.handleInputChange(${e.id}, 'operator', this.value)">\n                    <option value="and" ${"and"===e.operator?"selected":""}>and</option>\n                    <option value="or" ${"or"===e.operator?"selected":""}>or</option>\n                    <option value="not" ${"not"===e.operator?"selected":""}>not</option>\n                  </select>\n                `:""}\n                <input type="text" class="input" value="${e.query}" placeholder="Search query" onchange="this.getRootNode().host.handleInputChange(${e.id}, 'query', this.value)">\n                <select class="select" value="${e.field}" onchange="this.getRootNode().host.handleInputChange(${e.id}, 'field', this.value)">\n                  <option value="">Any field</option>\n                  <option value="title" ${"title"===e.field?"selected":""}>Title</option>\n                  <option value="archivalHistory" ${"archivalHistory"===e.field?"selected":""}>Archival history</option>\n                  <option value="scopeAndContent" ${"scopeAndContent"===e.field?"selected":""}>Scope and content</option>\n                  <option value="extentAndMedium" ${"extentAndMedium"===e.field?"selected":""}>Extent and medium</option>\n                  <option value="subject" ${"subject"===e.field?"selected":""}>Subject access points</option>\n                  <option value="name" ${"name"===e.field?"selected":""}>Name access points</option>\n                  <option value="place" ${"place"===e.field?"selected":""}>Place access points</option>\n                  <option value="genre" ${"genre"===e.field?"selected":""}>Genre access points</option>\n                  <option value="identifier" ${"identifier"===e.field?"selected":""}>Identifier</option>\n                  <option value="referenceCode" ${"referenceCode"===e.field?"selected":""}>Reference code</option>\n                  <option value="digitalObjectTranscript" ${"digitalObjectTranscript"===e.field?"selected":""}>Digital object text</option>\n                  <option value="creator" ${"creator"===e.field?"selected":""}>Creator</option>\n                  <option value="findingAidTranscript" ${"findingAidTranscript"===e.field?"selected":""}>Finding aid text</option>\n                  <option value="allExceptFindingAidTranscript" ${"allExceptFindingAidTranscript"===e.field?"selected":""}>Any field except finding aid text</option>\n                </select>\n                <button type="button" class="remove-button" style="${0===e.id?"display:none;":""}" onclick="this.getRootNode().host.removeCriterion(${e.id})">Remove</button>\n              </div>\n            `)).join("")}\n          </div>\n          <button type="button" class="button" onclick="this.getRootNode().host.addCriterion()">Add Another Criterion</button>\n          <button type="button" class="button" onclick="this.getRootNode().host.performSearch()">Search</button>\n\n          ${this.isLoading?'<div class="loading"></div>':""}\n        \n          ${this.error?`<div class="error-message">${this.error}</div>`:""}\n\n          <div id="results" class="results">\n            ${0!==this.results.length||this.isLoading||this.error?this.results.map((e=>`\n                <div class="result-item" data-slug="${e.slug}">\n                  <div class="result-content">\n                    <h4>${e.title}</h4>\n                    <p>Reference code: ${e.reference_code}</p>\n                    <p>Level of description: ${e.level_of_description}</p>\n                    <p>URL: <a href="${this.atomUrl}/${e.slug}">${this.atomUrl}/${e.slug}</a></p>\n                    <button type="button" class="button" onclick="this.getRootNode().host.handleResultClick('${e.slug}')">Link to this result</button>\n                  </div>\n                ${e.thumbnail_url?`\n                   <img src="${e.thumbnail_url.replace(/^http:\/\/[^/]+/,this.atomUrl)}" class="result-image">\n                  `:""}\n                </div>\n              `)).join(""):"<p>No results found. Please try a different search.</p>"}\n          </div>\n          ${this.renderPagination()}\n        </div>\n      </div>\n    `}}customElements.define("atom-search-interface",e)},6738:()=>{class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),console.log("connected help"),this.updateContent()}render(){this.shadowRoot.innerHTML='\n        <style>\n          :host {\n            display: block;\n            background: #f8f9fa;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n            padding: 16px;\n            font-family: Arial, sans-serif;\n            max-width: 300px;\n          }\n          .help-content {\n            color: #333;\n            font-size: 14px;\n            line-height: 1.5;\n          }\n        </style>\n        <div class="help-content"></div>\n      '}updateContent(){const e=Curate.contextualHelp.context;this.shadowRoot.querySelector(".help-content").textContent=this.getHelpContent(e)}getHelpContent(e){const{page:t,lastRightClickedElement:n,selection:o}=e,i=o&&o.length>0;n&&n.tagName.toLowerCase();return!0===i?`You've selected ${o.length} item(s). This area allows you to perform actions on your selection.`:`You're on the ${t} page. Right-click on elements to see context-specific help.`}}customElements.define("contextual-help",e)},7523:()=>{class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.processQueue=[],this.runningProcesses=new Map,this.maxConcurrent=5}connectedCallback(){this.render(),this.processQueueInterval=setInterval((()=>this.processQueuedItems()),1e3)}disconnectedCallback(){clearInterval(this.processQueueInterval)}render(){this.shadowRoot.innerHTML='\n        <style>\n          :host {\n            display: block;\n            padding: 20px;\n          }\n          .status-container {\n            display: flex;\n            flex-direction: column;\n            gap: 20px;\n          }\n          .status-item {\n            background: var(--md-sys-color-background);\n            border-radius: 8px;\n            padding: 15px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            transition: all 0.3s ease;\n            max-width:50vw;\n          }\n          .status-item:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n          }\n          .status-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 10px;\n          }\n          .status-title {\n            font-weight: bold;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n          }\n          .status-indicator {\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            display: inline-block;\n            flex-shrink: 0;\n            margin-left: 10px;\n          }\n          .status-details {\n            font-size: 0.9em;\n            color: #666;\n          }\n          .status-message {\n            margin-top: 10px;\n            font-style: italic;\n            color: #888;\n          }\n          .node-title {\n            margin-top: 5px;\n            font-size: 0.85em;\n            color: #555;\n          }\n          .queued { background-color: #9e9e9e; }\n          .loading { background-color: #ffd700; }\n          .success { background-color: #4caf50; }\n          .error { background-color: #f44336; }\n          .progress-bar {\n            height: 4px;\n            background-color: #e0e0e0;\n            border-radius: 2px;\n            margin-top: 10px;\n            overflow: hidden;\n          }\n          .progress-bar-fill {\n            height: 100%;\n            background-color: #2196f3;\n            transition: width 0.3s ease;\n          }\n          @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n          }\n          .pulsing {\n            animation: pulse 1.5s infinite ease-in-out;\n          }\n        </style>\n        <div class="status-container"></div>\n      '}addToQueue(e){const t={id:this.generateUniqueId(e),node:e,status:"queued",title:`Queued: ${e._metadata.get("usermeta-import-oai-link-id")}`,details:`Repository: ${e._metadata.get("usermeta-import-oai-repo-url")}`,nodeTitle:e._label};this.processQueue.push(t),this.updateStatusCard(t)}async processQueuedItems(){for(;this.runningProcesses.size<this.maxConcurrent&&this.processQueue.length>0;){const e=this.processQueue.shift();this.runningProcesses.set(e.id,e),this.initiateHarvest(e)}}async initiateHarvest(e){const{node:t,id:n}=e,o=t._metadata.get("usermeta-import-oai-repo-url"),i=t._metadata.get("usermeta-import-oai-link-id"),a=t._metadata.get("usermeta-import-oai-metadata-prefix");if(o&&i&&a){this.updateProcessStatus(n,"loading",`Harvesting ${i}`,`Repository: ${o}`,0);try{const e=await fetch("http://127.0.0.1:5000/harvest",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({repo_url:o,identifier:i,metadata_prefix:a})});if(!e.ok){const t=await e.json();throw{message:t.error,data:t.data}}const s=await e.json(),r=this.convertJson(s);await Curate.api.files.updateMetadata(t,r),this.updateProcessStatus(n,"success",`Harvested ${i}`,`Successfully processed data from ${o}${i}`,100)}catch(e){this.updateProcessStatus(n,"error",`Failed to harvest ${i}`,`Error: ${e.message}: ${e.data?e.data:""}`,100)}finally{this.runningProcesses.delete(n)}}else this.updateProcessStatus(n,"error",`Failed to harvest ${i}`,"Repository, identifier, or metadata prefix not found",100)}updateProcessStatus(e,t,n,o,i){const a=this.runningProcesses.get(e)||this.processQueue.find((t=>t.id===e));a&&(Object.assign(a,{status:t,title:n,details:o,progress:i}),this.updateStatusCard(a))}updateStatusCard(e){const t=this.shadowRoot.querySelector(".status-container");let n=t.querySelector(`[data-id="${e.id}"]`);n||(n=document.createElement("div"),n.classList.add("status-item"),n.setAttribute("data-id",e.id),t.appendChild(n));const{status:o,title:i,details:a,progress:s,nodeTitle:r}=e;n.innerHTML=`\n        <div class="status-header">\n          <span class="status-title" title="${i}">${i}</span>\n          <span class="status-indicator ${o} ${"loading"===o?"pulsing":""}"></span>\n        </div>\n        <div class="status-details" title="${a}">${a}</div>\n        <div class="node-title" title="Node: ${r}">Node: ${r}</div>\n        ${"loading"===o?`\n          <div class="progress-bar">\n            <div class="progress-bar-fill" style="width: ${s||0}%"></div>\n          </div>\n        `:""}\n      `}generateUniqueId(e){return`${e._metadata.get("uuid")}-${e._metadata.get("usermeta-import-oai-link-id")}`}convertJson(e){const t=e.schema,n=e.data;let o=[];for(const e in n)if(Array.isArray(n[e])){let t=n[e].join(", ");o.push({field:e,value:t})}let i={};return i[t]=o,i}processAllNodes(e){e.forEach((e=>this.addToQueue(e)))}}customElements.define("oai-harvest-status",e)}},n={};function o(e){var i=n[e];if(void 0!==i)return i.exports;var a=n[e]={exports:{}};return t[e](a,a.exports,o),a.exports}o.m=t,e=[],o.O=(t,n,i,a)=>{if(!n){var s=1/0;for(c=0;c<e.length;c++){for(var[n,i,a]=e[c],r=!0,l=0;l<n.length;l++)(!1&a||s>=a)&&Object.keys(o.O).every((e=>o.O[e](n[l])))?n.splice(l--,1):(r=!1,a<s&&(s=a));if(r){e.splice(c--,1);var d=i();void 0!==d&&(t=d)}}return t}a=a||0;for(var c=e.length;c>0&&e[c-1][2]>a;c--)e[c]=e[c-1];e[c]=[n,i,a]},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={792:0};o.O.j=t=>0===e[t];var t=(t,n)=>{var i,a,[s,r,l]=n,d=0;if(s.some((t=>0!==e[t]))){for(i in r)o.o(r,i)&&(o.m[i]=r[i]);if(l)var c=l(o)}for(t&&t(n);d<s.length;d++)a=s[d],o.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return o.O(c)},n=this.webpackChunkcurate_js=this.webpackChunkcurate_js||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var i=o.O(void 0,[224,455,872,491,772],(()=>o(98)));i=o.O(i)})();